import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Cognito::UserPoolClient
 */
export declare function getUserPoolClient(args: GetUserPoolClientArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolClientResult>;
export interface GetUserPoolClientArgs {
    id: string;
}
export interface GetUserPoolClientResult {
    readonly accessTokenValidity?: number;
    readonly allowedOAuthFlows?: string[];
    readonly allowedOAuthFlowsUserPoolClient?: boolean;
    readonly allowedOAuthScopes?: string[];
    readonly analyticsConfiguration?: outputs.cognito.UserPoolClientAnalyticsConfiguration;
    readonly authSessionValidity?: number;
    readonly callbackURLs?: string[];
    readonly clientName?: string;
    readonly clientSecret?: string;
    readonly defaultRedirectURI?: string;
    readonly enablePropagateAdditionalUserContextData?: boolean;
    readonly enableTokenRevocation?: boolean;
    readonly explicitAuthFlows?: string[];
    readonly id?: string;
    readonly idTokenValidity?: number;
    readonly logoutURLs?: string[];
    readonly name?: string;
    readonly preventUserExistenceErrors?: string;
    readonly readAttributes?: string[];
    readonly refreshTokenValidity?: number;
    readonly supportedIdentityProviders?: string[];
    readonly tokenValidityUnits?: outputs.cognito.UserPoolClientTokenValidityUnits;
    readonly writeAttributes?: string[];
}
export declare function getUserPoolClientOutput(args: GetUserPoolClientOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserPoolClientResult>;
export interface GetUserPoolClientOutputArgs {
    id: pulumi.Input<string>;
}
