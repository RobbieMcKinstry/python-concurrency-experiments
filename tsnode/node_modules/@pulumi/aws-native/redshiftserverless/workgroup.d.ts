import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::RedshiftServerless::Workgroup Resource Type
 */
export declare class Workgroup extends pulumi.CustomResource {
    /**
     * Get an existing Workgroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Workgroup;
    /**
     * Returns true if the given object is an instance of Workgroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Workgroup;
    readonly baseCapacity: pulumi.Output<number | undefined>;
    readonly configParameters: pulumi.Output<outputs.redshiftserverless.WorkgroupConfigParameter[] | undefined>;
    readonly enhancedVpcRouting: pulumi.Output<boolean | undefined>;
    readonly namespaceName: pulumi.Output<string | undefined>;
    readonly publiclyAccessible: pulumi.Output<boolean | undefined>;
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    readonly subnetIds: pulumi.Output<string[] | undefined>;
    readonly tags: pulumi.Output<outputs.redshiftserverless.WorkgroupTag[] | undefined>;
    readonly workgroup: pulumi.Output<outputs.redshiftserverless.Workgroup>;
    readonly workgroupName: pulumi.Output<string>;
    /**
     * Create a Workgroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkgroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Workgroup resource.
 */
export interface WorkgroupArgs {
    baseCapacity?: pulumi.Input<number>;
    configParameters?: pulumi.Input<pulumi.Input<inputs.redshiftserverless.WorkgroupConfigParameterArgs>[]>;
    enhancedVpcRouting?: pulumi.Input<boolean>;
    namespaceName?: pulumi.Input<string>;
    publiclyAccessible?: pulumi.Input<boolean>;
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.redshiftserverless.WorkgroupTagArgs>[]>;
    workgroupName?: pulumi.Input<string>;
}
