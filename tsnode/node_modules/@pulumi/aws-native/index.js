"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cloudtrail = exports.cloudfront = exports.cloudformation = exports.cloud9 = exports.chatbot = exports.certificatemanager = exports.ce = exports.cassandra = exports.budgets = exports.billingconductor = exports.batch = exports.backup = exports.autoscalingplans = exports.autoscaling = exports.auditmanager = exports.athena = exports.ask = exports.aps = exports.appsync = exports.appstream = exports.apprunner = exports.appmesh = exports.applicationinsights = exports.applicationautoscaling = exports.appintegrations = exports.appflow = exports.appconfig = exports.apigatewayv2 = exports.apigateway = exports.amplifyuibuilder = exports.amplify = exports.amazonmq = exports.acmpca = exports.accessanalyzer = exports.Provider = exports.importValueOutput = exports.importValue = exports.getUrlSuffix = exports.getSsmParameterStringOutput = exports.getSsmParameterString = exports.getSsmParameterListOutput = exports.getSsmParameterList = exports.getRegion = exports.getPartition = exports.getAzsOutput = exports.getAzs = exports.getAccountId = exports.ExtensionResource = exports.cidrOutput = exports.cidr = void 0;
exports.fms = exports.fis = exports.finspace = exports.evidently = exports.eventschemas = exports.events = exports.emrserverless = exports.emrcontainers = exports.emr = exports.elasticsearch = exports.elasticloadbalancingv2 = exports.elasticloadbalancing = exports.elasticbeanstalk = exports.elasticache = exports.eks = exports.efs = exports.ecs = exports.ecr = exports.ec2 = exports.dynamodb = exports.docdb = exports.dms = exports.dlm = exports.directoryservice = exports.devopsguru = exports.devicefarm = exports.detective = exports.dax = exports.datasync = exports.datapipeline = exports.databrew = exports.customerprofiles = exports.cur = exports.controltower = exports.connectcampaigns = exports.connect = exports.configuration = exports.config = exports.cognito = exports.codestarnotifications = exports.codestarconnections = exports.codestar = exports.codepipeline = exports.codegurureviewer = exports.codeguruprofiler = exports.codedeploy = exports.codecommit = exports.codebuild = exports.codeartifact = exports.cloudwatch = void 0;
exports.mediaconnect = exports.managedblockchain = exports.macie = exports.m2 = exports.lookoutvision = exports.lookoutmetrics = exports.lookoutequipment = exports.logs = exports.location = exports.lightsail = exports.licensemanager = exports.lex = exports.lambda = exports.lakeformation = exports.kms = exports.kinesisvideo = exports.kinesisfirehose = exports.kinesisanalyticsv2 = exports.kinesisanalytics = exports.kinesis = exports.kendra = exports.kafkaconnect = exports.ivs = exports.iotwireless = exports.iottwinmaker = exports.iotthingsgraph = exports.iotsitewise = exports.iotfleetwise = exports.iotfleethub = exports.iotevents = exports.iotcoredeviceadvisor = exports.iotanalytics = exports.iot1click = exports.iot = exports.inspectorv2 = exports.inspector = exports.imagebuilder = exports.identitystore = exports.iam = exports.healthlake = exports.guardduty = exports.groundstation = exports.greengrassv2 = exports.greengrass = exports.glue = exports.globalaccelerator = exports.gamelift = exports.fsx = exports.frauddetector = exports.forecast = void 0;
exports.sqs = exports.sns = exports.signer = exports.ses = exports.servicediscovery = exports.servicecatalogappregistry = exports.servicecatalog = exports.securityhub = exports.secretsmanager = exports.sdb = exports.sagemaker = exports.s3outposts = exports.s3objectlambda = exports.s3 = exports.rum = exports.route53resolver = exports.route53recoveryreadiness = exports.route53recoverycontrol = exports.route53 = exports.rolesanywhere = exports.robomaker = exports.resourcegroups = exports.resiliencehub = exports.rekognition = exports.refactorspaces = exports.redshiftserverless = exports.redshift = exports.rds = exports.ram = exports.quicksight = exports.qldb = exports.pinpointemail = exports.pinpoint = exports.personalize = exports.panorama = exports.opsworkscm = exports.opsworks = exports.opensearchservice = exports.nimblestudio = exports.networkmanager = exports.networkfirewall = exports.neptune = exports.mwaa = exports.msk = exports.memorydb = exports.mediatailor = exports.mediastore = exports.mediapackage = exports.medialive = exports.mediaconvert = void 0;
exports.xray = exports.workspaces = exports.wisdom = exports.wafv2 = exports.wafregional = exports.waf = exports.voiceid = exports.types = exports.transfer = exports.timestream = exports.synthetics = exports.supportapp = exports.stepfunctions = exports.sso = exports.ssmincidents = exports.ssmcontacts = exports.ssm = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.cidr = null;
exports.cidrOutput = null;
utilities.lazyLoad(exports, ["cidr", "cidrOutput"], () => require("./cidr"));
exports.ExtensionResource = null;
utilities.lazyLoad(exports, ["ExtensionResource"], () => require("./extensionResource"));
exports.getAccountId = null;
utilities.lazyLoad(exports, ["getAccountId"], () => require("./getAccountId"));
exports.getAzs = null;
exports.getAzsOutput = null;
utilities.lazyLoad(exports, ["getAzs", "getAzsOutput"], () => require("./getAzs"));
exports.getPartition = null;
utilities.lazyLoad(exports, ["getPartition"], () => require("./getPartition"));
exports.getRegion = null;
utilities.lazyLoad(exports, ["getRegion"], () => require("./getRegion"));
exports.getSsmParameterList = null;
exports.getSsmParameterListOutput = null;
utilities.lazyLoad(exports, ["getSsmParameterList", "getSsmParameterListOutput"], () => require("./getSsmParameterList"));
exports.getSsmParameterString = null;
exports.getSsmParameterStringOutput = null;
utilities.lazyLoad(exports, ["getSsmParameterString", "getSsmParameterStringOutput"], () => require("./getSsmParameterString"));
exports.getUrlSuffix = null;
utilities.lazyLoad(exports, ["getUrlSuffix"], () => require("./getUrlSuffix"));
exports.importValue = null;
exports.importValueOutput = null;
utilities.lazyLoad(exports, ["importValue", "importValueOutput"], () => require("./importValue"));
exports.Provider = null;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));
// Export enums:
__exportStar(require("./types/enums"), exports);
// Export sub-modules:
const accessanalyzer = require("./accessanalyzer");
exports.accessanalyzer = accessanalyzer;
const acmpca = require("./acmpca");
exports.acmpca = acmpca;
const amazonmq = require("./amazonmq");
exports.amazonmq = amazonmq;
const amplify = require("./amplify");
exports.amplify = amplify;
const amplifyuibuilder = require("./amplifyuibuilder");
exports.amplifyuibuilder = amplifyuibuilder;
const apigateway = require("./apigateway");
exports.apigateway = apigateway;
const apigatewayv2 = require("./apigatewayv2");
exports.apigatewayv2 = apigatewayv2;
const appconfig = require("./appconfig");
exports.appconfig = appconfig;
const appflow = require("./appflow");
exports.appflow = appflow;
const appintegrations = require("./appintegrations");
exports.appintegrations = appintegrations;
const applicationautoscaling = require("./applicationautoscaling");
exports.applicationautoscaling = applicationautoscaling;
const applicationinsights = require("./applicationinsights");
exports.applicationinsights = applicationinsights;
const appmesh = require("./appmesh");
exports.appmesh = appmesh;
const apprunner = require("./apprunner");
exports.apprunner = apprunner;
const appstream = require("./appstream");
exports.appstream = appstream;
const appsync = require("./appsync");
exports.appsync = appsync;
const aps = require("./aps");
exports.aps = aps;
const ask = require("./ask");
exports.ask = ask;
const athena = require("./athena");
exports.athena = athena;
const auditmanager = require("./auditmanager");
exports.auditmanager = auditmanager;
const autoscaling = require("./autoscaling");
exports.autoscaling = autoscaling;
const autoscalingplans = require("./autoscalingplans");
exports.autoscalingplans = autoscalingplans;
const backup = require("./backup");
exports.backup = backup;
const batch = require("./batch");
exports.batch = batch;
const billingconductor = require("./billingconductor");
exports.billingconductor = billingconductor;
const budgets = require("./budgets");
exports.budgets = budgets;
const cassandra = require("./cassandra");
exports.cassandra = cassandra;
const ce = require("./ce");
exports.ce = ce;
const certificatemanager = require("./certificatemanager");
exports.certificatemanager = certificatemanager;
const chatbot = require("./chatbot");
exports.chatbot = chatbot;
const cloud9 = require("./cloud9");
exports.cloud9 = cloud9;
const cloudformation = require("./cloudformation");
exports.cloudformation = cloudformation;
const cloudfront = require("./cloudfront");
exports.cloudfront = cloudfront;
const cloudtrail = require("./cloudtrail");
exports.cloudtrail = cloudtrail;
const cloudwatch = require("./cloudwatch");
exports.cloudwatch = cloudwatch;
const codeartifact = require("./codeartifact");
exports.codeartifact = codeartifact;
const codebuild = require("./codebuild");
exports.codebuild = codebuild;
const codecommit = require("./codecommit");
exports.codecommit = codecommit;
const codedeploy = require("./codedeploy");
exports.codedeploy = codedeploy;
const codeguruprofiler = require("./codeguruprofiler");
exports.codeguruprofiler = codeguruprofiler;
const codegurureviewer = require("./codegurureviewer");
exports.codegurureviewer = codegurureviewer;
const codepipeline = require("./codepipeline");
exports.codepipeline = codepipeline;
const codestar = require("./codestar");
exports.codestar = codestar;
const codestarconnections = require("./codestarconnections");
exports.codestarconnections = codestarconnections;
const codestarnotifications = require("./codestarnotifications");
exports.codestarnotifications = codestarnotifications;
const cognito = require("./cognito");
exports.cognito = cognito;
const config = require("./config");
exports.config = config;
const configuration = require("./configuration");
exports.configuration = configuration;
const connect = require("./connect");
exports.connect = connect;
const connectcampaigns = require("./connectcampaigns");
exports.connectcampaigns = connectcampaigns;
const controltower = require("./controltower");
exports.controltower = controltower;
const cur = require("./cur");
exports.cur = cur;
const customerprofiles = require("./customerprofiles");
exports.customerprofiles = customerprofiles;
const databrew = require("./databrew");
exports.databrew = databrew;
const datapipeline = require("./datapipeline");
exports.datapipeline = datapipeline;
const datasync = require("./datasync");
exports.datasync = datasync;
const dax = require("./dax");
exports.dax = dax;
const detective = require("./detective");
exports.detective = detective;
const devicefarm = require("./devicefarm");
exports.devicefarm = devicefarm;
const devopsguru = require("./devopsguru");
exports.devopsguru = devopsguru;
const directoryservice = require("./directoryservice");
exports.directoryservice = directoryservice;
const dlm = require("./dlm");
exports.dlm = dlm;
const dms = require("./dms");
exports.dms = dms;
const docdb = require("./docdb");
exports.docdb = docdb;
const dynamodb = require("./dynamodb");
exports.dynamodb = dynamodb;
const ec2 = require("./ec2");
exports.ec2 = ec2;
const ecr = require("./ecr");
exports.ecr = ecr;
const ecs = require("./ecs");
exports.ecs = ecs;
const efs = require("./efs");
exports.efs = efs;
const eks = require("./eks");
exports.eks = eks;
const elasticache = require("./elasticache");
exports.elasticache = elasticache;
const elasticbeanstalk = require("./elasticbeanstalk");
exports.elasticbeanstalk = elasticbeanstalk;
const elasticloadbalancing = require("./elasticloadbalancing");
exports.elasticloadbalancing = elasticloadbalancing;
const elasticloadbalancingv2 = require("./elasticloadbalancingv2");
exports.elasticloadbalancingv2 = elasticloadbalancingv2;
const elasticsearch = require("./elasticsearch");
exports.elasticsearch = elasticsearch;
const emr = require("./emr");
exports.emr = emr;
const emrcontainers = require("./emrcontainers");
exports.emrcontainers = emrcontainers;
const emrserverless = require("./emrserverless");
exports.emrserverless = emrserverless;
const events = require("./events");
exports.events = events;
const eventschemas = require("./eventschemas");
exports.eventschemas = eventschemas;
const evidently = require("./evidently");
exports.evidently = evidently;
const finspace = require("./finspace");
exports.finspace = finspace;
const fis = require("./fis");
exports.fis = fis;
const fms = require("./fms");
exports.fms = fms;
const forecast = require("./forecast");
exports.forecast = forecast;
const frauddetector = require("./frauddetector");
exports.frauddetector = frauddetector;
const fsx = require("./fsx");
exports.fsx = fsx;
const gamelift = require("./gamelift");
exports.gamelift = gamelift;
const globalaccelerator = require("./globalaccelerator");
exports.globalaccelerator = globalaccelerator;
const glue = require("./glue");
exports.glue = glue;
const greengrass = require("./greengrass");
exports.greengrass = greengrass;
const greengrassv2 = require("./greengrassv2");
exports.greengrassv2 = greengrassv2;
const groundstation = require("./groundstation");
exports.groundstation = groundstation;
const guardduty = require("./guardduty");
exports.guardduty = guardduty;
const healthlake = require("./healthlake");
exports.healthlake = healthlake;
const iam = require("./iam");
exports.iam = iam;
const identitystore = require("./identitystore");
exports.identitystore = identitystore;
const imagebuilder = require("./imagebuilder");
exports.imagebuilder = imagebuilder;
const inspector = require("./inspector");
exports.inspector = inspector;
const inspectorv2 = require("./inspectorv2");
exports.inspectorv2 = inspectorv2;
const iot = require("./iot");
exports.iot = iot;
const iot1click = require("./iot1click");
exports.iot1click = iot1click;
const iotanalytics = require("./iotanalytics");
exports.iotanalytics = iotanalytics;
const iotcoredeviceadvisor = require("./iotcoredeviceadvisor");
exports.iotcoredeviceadvisor = iotcoredeviceadvisor;
const iotevents = require("./iotevents");
exports.iotevents = iotevents;
const iotfleethub = require("./iotfleethub");
exports.iotfleethub = iotfleethub;
const iotfleetwise = require("./iotfleetwise");
exports.iotfleetwise = iotfleetwise;
const iotsitewise = require("./iotsitewise");
exports.iotsitewise = iotsitewise;
const iotthingsgraph = require("./iotthingsgraph");
exports.iotthingsgraph = iotthingsgraph;
const iottwinmaker = require("./iottwinmaker");
exports.iottwinmaker = iottwinmaker;
const iotwireless = require("./iotwireless");
exports.iotwireless = iotwireless;
const ivs = require("./ivs");
exports.ivs = ivs;
const kafkaconnect = require("./kafkaconnect");
exports.kafkaconnect = kafkaconnect;
const kendra = require("./kendra");
exports.kendra = kendra;
const kinesis = require("./kinesis");
exports.kinesis = kinesis;
const kinesisanalytics = require("./kinesisanalytics");
exports.kinesisanalytics = kinesisanalytics;
const kinesisanalyticsv2 = require("./kinesisanalyticsv2");
exports.kinesisanalyticsv2 = kinesisanalyticsv2;
const kinesisfirehose = require("./kinesisfirehose");
exports.kinesisfirehose = kinesisfirehose;
const kinesisvideo = require("./kinesisvideo");
exports.kinesisvideo = kinesisvideo;
const kms = require("./kms");
exports.kms = kms;
const lakeformation = require("./lakeformation");
exports.lakeformation = lakeformation;
const lambda = require("./lambda");
exports.lambda = lambda;
const lex = require("./lex");
exports.lex = lex;
const licensemanager = require("./licensemanager");
exports.licensemanager = licensemanager;
const lightsail = require("./lightsail");
exports.lightsail = lightsail;
const location = require("./location");
exports.location = location;
const logs = require("./logs");
exports.logs = logs;
const lookoutequipment = require("./lookoutequipment");
exports.lookoutequipment = lookoutequipment;
const lookoutmetrics = require("./lookoutmetrics");
exports.lookoutmetrics = lookoutmetrics;
const lookoutvision = require("./lookoutvision");
exports.lookoutvision = lookoutvision;
const m2 = require("./m2");
exports.m2 = m2;
const macie = require("./macie");
exports.macie = macie;
const managedblockchain = require("./managedblockchain");
exports.managedblockchain = managedblockchain;
const mediaconnect = require("./mediaconnect");
exports.mediaconnect = mediaconnect;
const mediaconvert = require("./mediaconvert");
exports.mediaconvert = mediaconvert;
const medialive = require("./medialive");
exports.medialive = medialive;
const mediapackage = require("./mediapackage");
exports.mediapackage = mediapackage;
const mediastore = require("./mediastore");
exports.mediastore = mediastore;
const mediatailor = require("./mediatailor");
exports.mediatailor = mediatailor;
const memorydb = require("./memorydb");
exports.memorydb = memorydb;
const msk = require("./msk");
exports.msk = msk;
const mwaa = require("./mwaa");
exports.mwaa = mwaa;
const neptune = require("./neptune");
exports.neptune = neptune;
const networkfirewall = require("./networkfirewall");
exports.networkfirewall = networkfirewall;
const networkmanager = require("./networkmanager");
exports.networkmanager = networkmanager;
const nimblestudio = require("./nimblestudio");
exports.nimblestudio = nimblestudio;
const opensearchservice = require("./opensearchservice");
exports.opensearchservice = opensearchservice;
const opsworks = require("./opsworks");
exports.opsworks = opsworks;
const opsworkscm = require("./opsworkscm");
exports.opsworkscm = opsworkscm;
const panorama = require("./panorama");
exports.panorama = panorama;
const personalize = require("./personalize");
exports.personalize = personalize;
const pinpoint = require("./pinpoint");
exports.pinpoint = pinpoint;
const pinpointemail = require("./pinpointemail");
exports.pinpointemail = pinpointemail;
const qldb = require("./qldb");
exports.qldb = qldb;
const quicksight = require("./quicksight");
exports.quicksight = quicksight;
const ram = require("./ram");
exports.ram = ram;
const rds = require("./rds");
exports.rds = rds;
const redshift = require("./redshift");
exports.redshift = redshift;
const redshiftserverless = require("./redshiftserverless");
exports.redshiftserverless = redshiftserverless;
const refactorspaces = require("./refactorspaces");
exports.refactorspaces = refactorspaces;
const rekognition = require("./rekognition");
exports.rekognition = rekognition;
const resiliencehub = require("./resiliencehub");
exports.resiliencehub = resiliencehub;
const resourcegroups = require("./resourcegroups");
exports.resourcegroups = resourcegroups;
const robomaker = require("./robomaker");
exports.robomaker = robomaker;
const rolesanywhere = require("./rolesanywhere");
exports.rolesanywhere = rolesanywhere;
const route53 = require("./route53");
exports.route53 = route53;
const route53recoverycontrol = require("./route53recoverycontrol");
exports.route53recoverycontrol = route53recoverycontrol;
const route53recoveryreadiness = require("./route53recoveryreadiness");
exports.route53recoveryreadiness = route53recoveryreadiness;
const route53resolver = require("./route53resolver");
exports.route53resolver = route53resolver;
const rum = require("./rum");
exports.rum = rum;
const s3 = require("./s3");
exports.s3 = s3;
const s3objectlambda = require("./s3objectlambda");
exports.s3objectlambda = s3objectlambda;
const s3outposts = require("./s3outposts");
exports.s3outposts = s3outposts;
const sagemaker = require("./sagemaker");
exports.sagemaker = sagemaker;
const sdb = require("./sdb");
exports.sdb = sdb;
const secretsmanager = require("./secretsmanager");
exports.secretsmanager = secretsmanager;
const securityhub = require("./securityhub");
exports.securityhub = securityhub;
const servicecatalog = require("./servicecatalog");
exports.servicecatalog = servicecatalog;
const servicecatalogappregistry = require("./servicecatalogappregistry");
exports.servicecatalogappregistry = servicecatalogappregistry;
const servicediscovery = require("./servicediscovery");
exports.servicediscovery = servicediscovery;
const ses = require("./ses");
exports.ses = ses;
const signer = require("./signer");
exports.signer = signer;
const sns = require("./sns");
exports.sns = sns;
const sqs = require("./sqs");
exports.sqs = sqs;
const ssm = require("./ssm");
exports.ssm = ssm;
const ssmcontacts = require("./ssmcontacts");
exports.ssmcontacts = ssmcontacts;
const ssmincidents = require("./ssmincidents");
exports.ssmincidents = ssmincidents;
const sso = require("./sso");
exports.sso = sso;
const stepfunctions = require("./stepfunctions");
exports.stepfunctions = stepfunctions;
const supportapp = require("./supportapp");
exports.supportapp = supportapp;
const synthetics = require("./synthetics");
exports.synthetics = synthetics;
const timestream = require("./timestream");
exports.timestream = timestream;
const transfer = require("./transfer");
exports.transfer = transfer;
const types = require("./types");
exports.types = types;
const voiceid = require("./voiceid");
exports.voiceid = voiceid;
const waf = require("./waf");
exports.waf = waf;
const wafregional = require("./wafregional");
exports.wafregional = wafregional;
const wafv2 = require("./wafv2");
exports.wafv2 = wafv2;
const wisdom = require("./wisdom");
exports.wisdom = wisdom;
const workspaces = require("./workspaces");
exports.workspaces = workspaces;
const xray = require("./xray");
exports.xray = xray;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:index:ExtensionResource":
                return new exports.ExtensionResource(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "index", _module);
pulumi.runtime.registerResourcePackage("aws-native", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:aws-native") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new exports.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map