import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Connect::InstanceStorageConfig
 */
export declare function getInstanceStorageConfig(args: GetInstanceStorageConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceStorageConfigResult>;
export interface GetInstanceStorageConfigArgs {
    associationId: string;
    /**
     * Connect Instance ID with which the storage config will be associated
     */
    instanceArn: string;
    resourceType: enums.connect.InstanceStorageConfigInstanceStorageResourceType;
}
export interface GetInstanceStorageConfigResult {
    readonly associationId?: string;
    readonly kinesisFirehoseConfig?: outputs.connect.InstanceStorageConfigKinesisFirehoseConfig;
    readonly kinesisStreamConfig?: outputs.connect.InstanceStorageConfigKinesisStreamConfig;
    readonly kinesisVideoStreamConfig?: outputs.connect.InstanceStorageConfigKinesisVideoStreamConfig;
    readonly s3Config?: outputs.connect.InstanceStorageConfigS3Config;
    readonly storageType?: enums.connect.InstanceStorageConfigStorageType;
}
export declare function getInstanceStorageConfigOutput(args: GetInstanceStorageConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceStorageConfigResult>;
export interface GetInstanceStorageConfigOutputArgs {
    associationId: pulumi.Input<string>;
    /**
     * Connect Instance ID with which the storage config will be associated
     */
    instanceArn: pulumi.Input<string>;
    resourceType: pulumi.Input<enums.connect.InstanceStorageConfigInstanceStorageResourceType>;
}
