"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserGroup = exports.User = exports.SubnetGroup = exports.SecurityGroupIngress = exports.SecurityGroup = exports.ReplicationGroup = exports.ParameterGroup = exports.GlobalReplicationGroup = exports.getUserGroupOutput = exports.getUserGroup = exports.getUserOutput = exports.getUser = exports.getSubnetGroupOutput = exports.getSubnetGroup = exports.getSecurityGroupIngressOutput = exports.getSecurityGroupIngress = exports.getSecurityGroupOutput = exports.getSecurityGroup = exports.getReplicationGroupOutput = exports.getReplicationGroup = exports.getParameterGroupOutput = exports.getParameterGroup = exports.getGlobalReplicationGroupOutput = exports.getGlobalReplicationGroup = exports.getCacheClusterOutput = exports.getCacheCluster = exports.CacheCluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.CacheCluster = null;
utilities.lazyLoad(exports, ["CacheCluster"], () => require("./cacheCluster"));
exports.getCacheCluster = null;
exports.getCacheClusterOutput = null;
utilities.lazyLoad(exports, ["getCacheCluster", "getCacheClusterOutput"], () => require("./getCacheCluster"));
exports.getGlobalReplicationGroup = null;
exports.getGlobalReplicationGroupOutput = null;
utilities.lazyLoad(exports, ["getGlobalReplicationGroup", "getGlobalReplicationGroupOutput"], () => require("./getGlobalReplicationGroup"));
exports.getParameterGroup = null;
exports.getParameterGroupOutput = null;
utilities.lazyLoad(exports, ["getParameterGroup", "getParameterGroupOutput"], () => require("./getParameterGroup"));
exports.getReplicationGroup = null;
exports.getReplicationGroupOutput = null;
utilities.lazyLoad(exports, ["getReplicationGroup", "getReplicationGroupOutput"], () => require("./getReplicationGroup"));
exports.getSecurityGroup = null;
exports.getSecurityGroupOutput = null;
utilities.lazyLoad(exports, ["getSecurityGroup", "getSecurityGroupOutput"], () => require("./getSecurityGroup"));
exports.getSecurityGroupIngress = null;
exports.getSecurityGroupIngressOutput = null;
utilities.lazyLoad(exports, ["getSecurityGroupIngress", "getSecurityGroupIngressOutput"], () => require("./getSecurityGroupIngress"));
exports.getSubnetGroup = null;
exports.getSubnetGroupOutput = null;
utilities.lazyLoad(exports, ["getSubnetGroup", "getSubnetGroupOutput"], () => require("./getSubnetGroup"));
exports.getUser = null;
exports.getUserOutput = null;
utilities.lazyLoad(exports, ["getUser", "getUserOutput"], () => require("./getUser"));
exports.getUserGroup = null;
exports.getUserGroupOutput = null;
utilities.lazyLoad(exports, ["getUserGroup", "getUserGroupOutput"], () => require("./getUserGroup"));
exports.GlobalReplicationGroup = null;
utilities.lazyLoad(exports, ["GlobalReplicationGroup"], () => require("./globalReplicationGroup"));
exports.ParameterGroup = null;
utilities.lazyLoad(exports, ["ParameterGroup"], () => require("./parameterGroup"));
exports.ReplicationGroup = null;
utilities.lazyLoad(exports, ["ReplicationGroup"], () => require("./replicationGroup"));
exports.SecurityGroup = null;
utilities.lazyLoad(exports, ["SecurityGroup"], () => require("./securityGroup"));
exports.SecurityGroupIngress = null;
utilities.lazyLoad(exports, ["SecurityGroupIngress"], () => require("./securityGroupIngress"));
exports.SubnetGroup = null;
utilities.lazyLoad(exports, ["SubnetGroup"], () => require("./subnetGroup"));
exports.User = null;
utilities.lazyLoad(exports, ["User"], () => require("./user"));
exports.UserGroup = null;
utilities.lazyLoad(exports, ["UserGroup"], () => require("./userGroup"));
// Export enums:
__exportStar(require("../types/enums/elasticache"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:elasticache:CacheCluster":
                return new exports.CacheCluster(name, undefined, { urn });
            case "aws-native:elasticache:GlobalReplicationGroup":
                return new exports.GlobalReplicationGroup(name, undefined, { urn });
            case "aws-native:elasticache:ParameterGroup":
                return new exports.ParameterGroup(name, undefined, { urn });
            case "aws-native:elasticache:ReplicationGroup":
                return new exports.ReplicationGroup(name, undefined, { urn });
            case "aws-native:elasticache:SecurityGroup":
                return new exports.SecurityGroup(name, undefined, { urn });
            case "aws-native:elasticache:SecurityGroupIngress":
                return new exports.SecurityGroupIngress(name, undefined, { urn });
            case "aws-native:elasticache:SubnetGroup":
                return new exports.SubnetGroup(name, undefined, { urn });
            case "aws-native:elasticache:User":
                return new exports.User(name, undefined, { urn });
            case "aws-native:elasticache:UserGroup":
                return new exports.UserGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "elasticache", _module);
//# sourceMappingURL=index.js.map