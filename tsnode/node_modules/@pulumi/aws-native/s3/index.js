"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageLens = exports.MultiRegionAccessPointPolicy = exports.MultiRegionAccessPoint = exports.getMultiRegionAccessPointPolicyOutput = exports.getMultiRegionAccessPointPolicy = exports.getMultiRegionAccessPointOutput = exports.getMultiRegionAccessPoint = exports.getBucketPolicyOutput = exports.getBucketPolicy = exports.getBucketOutput = exports.getBucket = exports.getAccessPointOutput = exports.getAccessPoint = exports.BucketPolicy = exports.Bucket = exports.AccessPoint = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessPoint = null;
utilities.lazyLoad(exports, ["AccessPoint"], () => require("./accessPoint"));
exports.Bucket = null;
utilities.lazyLoad(exports, ["Bucket"], () => require("./bucket"));
exports.BucketPolicy = null;
utilities.lazyLoad(exports, ["BucketPolicy"], () => require("./bucketPolicy"));
exports.getAccessPoint = null;
exports.getAccessPointOutput = null;
utilities.lazyLoad(exports, ["getAccessPoint", "getAccessPointOutput"], () => require("./getAccessPoint"));
exports.getBucket = null;
exports.getBucketOutput = null;
utilities.lazyLoad(exports, ["getBucket", "getBucketOutput"], () => require("./getBucket"));
exports.getBucketPolicy = null;
exports.getBucketPolicyOutput = null;
utilities.lazyLoad(exports, ["getBucketPolicy", "getBucketPolicyOutput"], () => require("./getBucketPolicy"));
exports.getMultiRegionAccessPoint = null;
exports.getMultiRegionAccessPointOutput = null;
utilities.lazyLoad(exports, ["getMultiRegionAccessPoint", "getMultiRegionAccessPointOutput"], () => require("./getMultiRegionAccessPoint"));
exports.getMultiRegionAccessPointPolicy = null;
exports.getMultiRegionAccessPointPolicyOutput = null;
utilities.lazyLoad(exports, ["getMultiRegionAccessPointPolicy", "getMultiRegionAccessPointPolicyOutput"], () => require("./getMultiRegionAccessPointPolicy"));
exports.MultiRegionAccessPoint = null;
utilities.lazyLoad(exports, ["MultiRegionAccessPoint"], () => require("./multiRegionAccessPoint"));
exports.MultiRegionAccessPointPolicy = null;
utilities.lazyLoad(exports, ["MultiRegionAccessPointPolicy"], () => require("./multiRegionAccessPointPolicy"));
exports.StorageLens = null;
utilities.lazyLoad(exports, ["StorageLens"], () => require("./storageLens"));
// Export enums:
__exportStar(require("../types/enums/s3"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:s3:AccessPoint":
                return new exports.AccessPoint(name, undefined, { urn });
            case "aws-native:s3:Bucket":
                return new exports.Bucket(name, undefined, { urn });
            case "aws-native:s3:BucketPolicy":
                return new exports.BucketPolicy(name, undefined, { urn });
            case "aws-native:s3:MultiRegionAccessPoint":
                return new exports.MultiRegionAccessPoint(name, undefined, { urn });
            case "aws-native:s3:MultiRegionAccessPointPolicy":
                return new exports.MultiRegionAccessPointPolicy(name, undefined, { urn });
            case "aws-native:s3:StorageLens":
                return new exports.StorageLens(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "s3", _module);
//# sourceMappingURL=index.js.map