"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Task = exports.LocationSMB = exports.LocationS3 = exports.LocationObjectStorage = exports.LocationNFS = exports.LocationHDFS = exports.LocationFSxWindows = exports.LocationFSxOpenZFS = exports.LocationFSxONTAP = exports.LocationFSxLustre = exports.LocationEFS = exports.getTaskOutput = exports.getTask = exports.getLocationSMBOutput = exports.getLocationSMB = exports.getLocationS3Output = exports.getLocationS3 = exports.getLocationObjectStorageOutput = exports.getLocationObjectStorage = exports.getLocationNFSOutput = exports.getLocationNFS = exports.getLocationHDFSOutput = exports.getLocationHDFS = exports.getLocationFSxWindowsOutput = exports.getLocationFSxWindows = exports.getLocationFSxOpenZFSOutput = exports.getLocationFSxOpenZFS = exports.getLocationFSxONTAPOutput = exports.getLocationFSxONTAP = exports.getLocationFSxLustreOutput = exports.getLocationFSxLustre = exports.getLocationEFSOutput = exports.getLocationEFS = exports.getAgentOutput = exports.getAgent = exports.Agent = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Agent = null;
utilities.lazyLoad(exports, ["Agent"], () => require("./agent"));
exports.getAgent = null;
exports.getAgentOutput = null;
utilities.lazyLoad(exports, ["getAgent", "getAgentOutput"], () => require("./getAgent"));
exports.getLocationEFS = null;
exports.getLocationEFSOutput = null;
utilities.lazyLoad(exports, ["getLocationEFS", "getLocationEFSOutput"], () => require("./getLocationEFS"));
exports.getLocationFSxLustre = null;
exports.getLocationFSxLustreOutput = null;
utilities.lazyLoad(exports, ["getLocationFSxLustre", "getLocationFSxLustreOutput"], () => require("./getLocationFSxLustre"));
exports.getLocationFSxONTAP = null;
exports.getLocationFSxONTAPOutput = null;
utilities.lazyLoad(exports, ["getLocationFSxONTAP", "getLocationFSxONTAPOutput"], () => require("./getLocationFSxONTAP"));
exports.getLocationFSxOpenZFS = null;
exports.getLocationFSxOpenZFSOutput = null;
utilities.lazyLoad(exports, ["getLocationFSxOpenZFS", "getLocationFSxOpenZFSOutput"], () => require("./getLocationFSxOpenZFS"));
exports.getLocationFSxWindows = null;
exports.getLocationFSxWindowsOutput = null;
utilities.lazyLoad(exports, ["getLocationFSxWindows", "getLocationFSxWindowsOutput"], () => require("./getLocationFSxWindows"));
exports.getLocationHDFS = null;
exports.getLocationHDFSOutput = null;
utilities.lazyLoad(exports, ["getLocationHDFS", "getLocationHDFSOutput"], () => require("./getLocationHDFS"));
exports.getLocationNFS = null;
exports.getLocationNFSOutput = null;
utilities.lazyLoad(exports, ["getLocationNFS", "getLocationNFSOutput"], () => require("./getLocationNFS"));
exports.getLocationObjectStorage = null;
exports.getLocationObjectStorageOutput = null;
utilities.lazyLoad(exports, ["getLocationObjectStorage", "getLocationObjectStorageOutput"], () => require("./getLocationObjectStorage"));
exports.getLocationS3 = null;
exports.getLocationS3Output = null;
utilities.lazyLoad(exports, ["getLocationS3", "getLocationS3Output"], () => require("./getLocationS3"));
exports.getLocationSMB = null;
exports.getLocationSMBOutput = null;
utilities.lazyLoad(exports, ["getLocationSMB", "getLocationSMBOutput"], () => require("./getLocationSMB"));
exports.getTask = null;
exports.getTaskOutput = null;
utilities.lazyLoad(exports, ["getTask", "getTaskOutput"], () => require("./getTask"));
exports.LocationEFS = null;
utilities.lazyLoad(exports, ["LocationEFS"], () => require("./locationEFS"));
exports.LocationFSxLustre = null;
utilities.lazyLoad(exports, ["LocationFSxLustre"], () => require("./locationFSxLustre"));
exports.LocationFSxONTAP = null;
utilities.lazyLoad(exports, ["LocationFSxONTAP"], () => require("./locationFSxONTAP"));
exports.LocationFSxOpenZFS = null;
utilities.lazyLoad(exports, ["LocationFSxOpenZFS"], () => require("./locationFSxOpenZFS"));
exports.LocationFSxWindows = null;
utilities.lazyLoad(exports, ["LocationFSxWindows"], () => require("./locationFSxWindows"));
exports.LocationHDFS = null;
utilities.lazyLoad(exports, ["LocationHDFS"], () => require("./locationHDFS"));
exports.LocationNFS = null;
utilities.lazyLoad(exports, ["LocationNFS"], () => require("./locationNFS"));
exports.LocationObjectStorage = null;
utilities.lazyLoad(exports, ["LocationObjectStorage"], () => require("./locationObjectStorage"));
exports.LocationS3 = null;
utilities.lazyLoad(exports, ["LocationS3"], () => require("./locationS3"));
exports.LocationSMB = null;
utilities.lazyLoad(exports, ["LocationSMB"], () => require("./locationSMB"));
exports.Task = null;
utilities.lazyLoad(exports, ["Task"], () => require("./task"));
// Export enums:
__exportStar(require("../types/enums/datasync"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:datasync:Agent":
                return new exports.Agent(name, undefined, { urn });
            case "aws-native:datasync:LocationEFS":
                return new exports.LocationEFS(name, undefined, { urn });
            case "aws-native:datasync:LocationFSxLustre":
                return new exports.LocationFSxLustre(name, undefined, { urn });
            case "aws-native:datasync:LocationFSxONTAP":
                return new exports.LocationFSxONTAP(name, undefined, { urn });
            case "aws-native:datasync:LocationFSxOpenZFS":
                return new exports.LocationFSxOpenZFS(name, undefined, { urn });
            case "aws-native:datasync:LocationFSxWindows":
                return new exports.LocationFSxWindows(name, undefined, { urn });
            case "aws-native:datasync:LocationHDFS":
                return new exports.LocationHDFS(name, undefined, { urn });
            case "aws-native:datasync:LocationNFS":
                return new exports.LocationNFS(name, undefined, { urn });
            case "aws-native:datasync:LocationObjectStorage":
                return new exports.LocationObjectStorage(name, undefined, { urn });
            case "aws-native:datasync:LocationS3":
                return new exports.LocationS3(name, undefined, { urn });
            case "aws-native:datasync:LocationSMB":
                return new exports.LocationSMB(name, undefined, { urn });
            case "aws-native:datasync:Task":
                return new exports.Task(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "datasync", _module);
//# sourceMappingURL=index.js.map