import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::ApiGateway::Stage
 */
export declare function getStage(args: GetStageArgs, opts?: pulumi.InvokeOptions): Promise<GetStageResult>;
export interface GetStageArgs {
    /**
     * The ID of the RestApi resource that you're deploying with this stage.
     */
    restApiId: string;
    /**
     * The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).
     */
    stageName: string;
}
export interface GetStageResult {
    /**
     * Specifies settings for logging access in this stage.
     */
    readonly accessLogSetting?: outputs.apigateway.StageAccessLogSetting;
    /**
     * Indicates whether cache clustering is enabled for the stage.
     */
    readonly cacheClusterEnabled?: boolean;
    /**
     * The stage's cache cluster size.
     */
    readonly cacheClusterSize?: string;
    /**
     * Specifies settings for the canary deployment in this stage.
     */
    readonly canarySetting?: outputs.apigateway.StageCanarySetting;
    /**
     * The ID of the client certificate that API Gateway uses to call your integration endpoints in the stage.
     */
    readonly clientCertificateId?: string;
    /**
     * The ID of the deployment that the stage is associated with. This parameter is required to create a stage.
     */
    readonly deploymentId?: string;
    /**
     * A description of the stage.
     */
    readonly description?: string;
    /**
     * The version ID of the API documentation snapshot.
     */
    readonly documentationVersion?: string;
    /**
     * Settings for all methods in the stage.
     */
    readonly methodSettings?: outputs.apigateway.StageMethodSetting[];
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the stage.
     */
    readonly tags?: outputs.apigateway.StageTag[];
    /**
     * Specifies whether active X-Ray tracing is enabled for this stage.
     */
    readonly tracingEnabled?: boolean;
    /**
     * A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value.
     */
    readonly variables?: any;
}
export declare function getStageOutput(args: GetStageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStageResult>;
export interface GetStageOutputArgs {
    /**
     * The ID of the RestApi resource that you're deploying with this stage.
     */
    restApiId: pulumi.Input<string>;
    /**
     * The name of the stage, which API Gateway uses as the first path segment in the invoked Uniform Resource Identifier (URI).
     */
    stageName: pulumi.Input<string>;
}
