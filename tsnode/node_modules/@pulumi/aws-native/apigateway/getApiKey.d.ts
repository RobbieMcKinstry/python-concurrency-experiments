import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::ApiGateway::ApiKey
 */
export declare function getApiKey(args: GetApiKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetApiKeyResult>;
export interface GetApiKeyArgs {
    /**
     * A Unique Key ID which identifies the API Key. Generated by the Create API and returned by the Read and List APIs
     */
    aPIKeyId: string;
}
export interface GetApiKeyResult {
    /**
     * A Unique Key ID which identifies the API Key. Generated by the Create API and returned by the Read and List APIs
     */
    readonly aPIKeyId?: string;
    /**
     * An AWS Marketplace customer identifier to use when integrating with the AWS SaaS Marketplace.
     */
    readonly customerId?: string;
    /**
     * A description of the purpose of the API key.
     */
    readonly description?: string;
    /**
     * Indicates whether the API key can be used by clients.
     */
    readonly enabled?: boolean;
    /**
     * A list of stages to associate with this API key.
     */
    readonly stageKeys?: outputs.apigateway.ApiKeyStageKey[];
    /**
     * An array of arbitrary tags (key-value pairs) to associate with the API key.
     */
    readonly tags?: outputs.apigateway.ApiKeyTag[];
}
export declare function getApiKeyOutput(args: GetApiKeyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetApiKeyResult>;
export interface GetApiKeyOutputArgs {
    /**
     * A Unique Key ID which identifies the API Key. Generated by the Create API and returned by the Read and List APIs
     */
    aPIKeyId: pulumi.Input<string>;
}
