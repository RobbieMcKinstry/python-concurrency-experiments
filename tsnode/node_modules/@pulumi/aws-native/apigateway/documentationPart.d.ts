import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::ApiGateway::DocumentationPart
 */
export declare class DocumentationPart extends pulumi.CustomResource {
    /**
     * Get an existing DocumentationPart resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DocumentationPart;
    /**
     * Returns true if the given object is an instance of DocumentationPart.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DocumentationPart;
    /**
     * The identifier of the documentation Part.
     */
    readonly documentationPartId: pulumi.Output<string>;
    /**
     * The location of the API entity that the documentation applies to.
     */
    readonly location: pulumi.Output<outputs.apigateway.DocumentationPartLocation>;
    /**
     * The documentation content map of the targeted API entity.
     */
    readonly properties: pulumi.Output<string>;
    /**
     * Identifier of the targeted API entity
     */
    readonly restApiId: pulumi.Output<string>;
    /**
     * Create a DocumentationPart resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DocumentationPartArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DocumentationPart resource.
 */
export interface DocumentationPartArgs {
    /**
     * The location of the API entity that the documentation applies to.
     */
    location: pulumi.Input<inputs.apigateway.DocumentationPartLocationArgs>;
    /**
     * The documentation content map of the targeted API entity.
     */
    properties: pulumi.Input<string>;
    /**
     * Identifier of the targeted API entity
     */
    restApiId: pulumi.Input<string>;
}
