import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Represents a studio component that connects a non-Nimble Studio resource in your account to your studio
 */
export declare function getStudioComponent(args: GetStudioComponentArgs, opts?: pulumi.InvokeOptions): Promise<GetStudioComponentResult>;
export interface GetStudioComponentArgs {
    studioComponentId: string;
    /**
     * <p>The studio ID. </p>
     */
    studioId: string;
}
export interface GetStudioComponentResult {
    readonly configuration?: outputs.nimblestudio.StudioComponentConfiguration;
    /**
     * <p>The description.</p>
     */
    readonly description?: string;
    /**
     * <p>The EC2 security groups that control access to the studio component.</p>
     */
    readonly ec2SecurityGroupIds?: string[];
    /**
     * <p>Initialization scripts for studio components.</p>
     */
    readonly initializationScripts?: outputs.nimblestudio.StudioComponentInitializationScript[];
    /**
     * <p>The name for the studio component.</p>
     */
    readonly name?: string;
    readonly runtimeRoleArn?: string;
    /**
     * <p>Parameters for the studio component scripts.</p>
     */
    readonly scriptParameters?: outputs.nimblestudio.StudioComponentScriptParameterKeyValue[];
    readonly secureInitializationRoleArn?: string;
    readonly studioComponentId?: string;
    readonly type?: enums.nimblestudio.StudioComponentType;
}
export declare function getStudioComponentOutput(args: GetStudioComponentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStudioComponentResult>;
export interface GetStudioComponentOutputArgs {
    studioComponentId: pulumi.Input<string>;
    /**
     * <p>The studio ID. </p>
     */
    studioId: pulumi.Input<string>;
}
