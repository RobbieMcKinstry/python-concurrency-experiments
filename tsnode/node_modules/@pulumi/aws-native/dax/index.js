"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubnetGroup = exports.ParameterGroup = exports.getSubnetGroupOutput = exports.getSubnetGroup = exports.getParameterGroupOutput = exports.getParameterGroup = exports.getClusterOutput = exports.getCluster = exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getParameterGroup = null;
exports.getParameterGroupOutput = null;
utilities.lazyLoad(exports, ["getParameterGroup", "getParameterGroupOutput"], () => require("./getParameterGroup"));
exports.getSubnetGroup = null;
exports.getSubnetGroupOutput = null;
utilities.lazyLoad(exports, ["getSubnetGroup", "getSubnetGroupOutput"], () => require("./getSubnetGroup"));
exports.ParameterGroup = null;
utilities.lazyLoad(exports, ["ParameterGroup"], () => require("./parameterGroup"));
exports.SubnetGroup = null;
utilities.lazyLoad(exports, ["SubnetGroup"], () => require("./subnetGroup"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:dax:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws-native:dax:ParameterGroup":
                return new exports.ParameterGroup(name, undefined, { urn });
            case "aws-native:dax:SubnetGroup":
                return new exports.SubnetGroup(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "dax", _module);
//# sourceMappingURL=index.js.map