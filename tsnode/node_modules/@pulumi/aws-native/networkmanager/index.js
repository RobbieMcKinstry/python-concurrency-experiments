"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcAttachment = exports.TransitGatewayRegistration = exports.SiteToSiteVpnAttachment = exports.Site = exports.LinkAssociation = exports.Link = exports.GlobalNetwork = exports.getVpcAttachmentOutput = exports.getVpcAttachment = exports.getSiteToSiteVpnAttachmentOutput = exports.getSiteToSiteVpnAttachment = exports.getSiteOutput = exports.getSite = exports.getLinkOutput = exports.getLink = exports.getGlobalNetworkOutput = exports.getGlobalNetwork = exports.getDeviceOutput = exports.getDevice = exports.getCoreNetworkOutput = exports.getCoreNetwork = exports.getConnectPeerOutput = exports.getConnectPeer = exports.getConnectAttachmentOutput = exports.getConnectAttachment = exports.Device = exports.CustomerGatewayAssociation = exports.CoreNetwork = exports.ConnectPeer = exports.ConnectAttachment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ConnectAttachment = null;
utilities.lazyLoad(exports, ["ConnectAttachment"], () => require("./connectAttachment"));
exports.ConnectPeer = null;
utilities.lazyLoad(exports, ["ConnectPeer"], () => require("./connectPeer"));
exports.CoreNetwork = null;
utilities.lazyLoad(exports, ["CoreNetwork"], () => require("./coreNetwork"));
exports.CustomerGatewayAssociation = null;
utilities.lazyLoad(exports, ["CustomerGatewayAssociation"], () => require("./customerGatewayAssociation"));
exports.Device = null;
utilities.lazyLoad(exports, ["Device"], () => require("./device"));
exports.getConnectAttachment = null;
exports.getConnectAttachmentOutput = null;
utilities.lazyLoad(exports, ["getConnectAttachment", "getConnectAttachmentOutput"], () => require("./getConnectAttachment"));
exports.getConnectPeer = null;
exports.getConnectPeerOutput = null;
utilities.lazyLoad(exports, ["getConnectPeer", "getConnectPeerOutput"], () => require("./getConnectPeer"));
exports.getCoreNetwork = null;
exports.getCoreNetworkOutput = null;
utilities.lazyLoad(exports, ["getCoreNetwork", "getCoreNetworkOutput"], () => require("./getCoreNetwork"));
exports.getDevice = null;
exports.getDeviceOutput = null;
utilities.lazyLoad(exports, ["getDevice", "getDeviceOutput"], () => require("./getDevice"));
exports.getGlobalNetwork = null;
exports.getGlobalNetworkOutput = null;
utilities.lazyLoad(exports, ["getGlobalNetwork", "getGlobalNetworkOutput"], () => require("./getGlobalNetwork"));
exports.getLink = null;
exports.getLinkOutput = null;
utilities.lazyLoad(exports, ["getLink", "getLinkOutput"], () => require("./getLink"));
exports.getSite = null;
exports.getSiteOutput = null;
utilities.lazyLoad(exports, ["getSite", "getSiteOutput"], () => require("./getSite"));
exports.getSiteToSiteVpnAttachment = null;
exports.getSiteToSiteVpnAttachmentOutput = null;
utilities.lazyLoad(exports, ["getSiteToSiteVpnAttachment", "getSiteToSiteVpnAttachmentOutput"], () => require("./getSiteToSiteVpnAttachment"));
exports.getVpcAttachment = null;
exports.getVpcAttachmentOutput = null;
utilities.lazyLoad(exports, ["getVpcAttachment", "getVpcAttachmentOutput"], () => require("./getVpcAttachment"));
exports.GlobalNetwork = null;
utilities.lazyLoad(exports, ["GlobalNetwork"], () => require("./globalNetwork"));
exports.Link = null;
utilities.lazyLoad(exports, ["Link"], () => require("./link"));
exports.LinkAssociation = null;
utilities.lazyLoad(exports, ["LinkAssociation"], () => require("./linkAssociation"));
exports.Site = null;
utilities.lazyLoad(exports, ["Site"], () => require("./site"));
exports.SiteToSiteVpnAttachment = null;
utilities.lazyLoad(exports, ["SiteToSiteVpnAttachment"], () => require("./siteToSiteVpnAttachment"));
exports.TransitGatewayRegistration = null;
utilities.lazyLoad(exports, ["TransitGatewayRegistration"], () => require("./transitGatewayRegistration"));
exports.VpcAttachment = null;
utilities.lazyLoad(exports, ["VpcAttachment"], () => require("./vpcAttachment"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:networkmanager:ConnectAttachment":
                return new exports.ConnectAttachment(name, undefined, { urn });
            case "aws-native:networkmanager:ConnectPeer":
                return new exports.ConnectPeer(name, undefined, { urn });
            case "aws-native:networkmanager:CoreNetwork":
                return new exports.CoreNetwork(name, undefined, { urn });
            case "aws-native:networkmanager:CustomerGatewayAssociation":
                return new exports.CustomerGatewayAssociation(name, undefined, { urn });
            case "aws-native:networkmanager:Device":
                return new exports.Device(name, undefined, { urn });
            case "aws-native:networkmanager:GlobalNetwork":
                return new exports.GlobalNetwork(name, undefined, { urn });
            case "aws-native:networkmanager:Link":
                return new exports.Link(name, undefined, { urn });
            case "aws-native:networkmanager:LinkAssociation":
                return new exports.LinkAssociation(name, undefined, { urn });
            case "aws-native:networkmanager:Site":
                return new exports.Site(name, undefined, { urn });
            case "aws-native:networkmanager:SiteToSiteVpnAttachment":
                return new exports.SiteToSiteVpnAttachment(name, undefined, { urn });
            case "aws-native:networkmanager:TransitGatewayRegistration":
                return new exports.TransitGatewayRegistration(name, undefined, { urn });
            case "aws-native:networkmanager:VpcAttachment":
                return new exports.VpcAttachment(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "networkmanager", _module);
//# sourceMappingURL=index.js.map