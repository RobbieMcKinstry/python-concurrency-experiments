import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Batch::JobQueue
 */
export declare class JobQueue extends pulumi.CustomResource {
    /**
     * Get an existing JobQueue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): JobQueue;
    /**
     * Returns true if the given object is an instance of JobQueue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is JobQueue;
    readonly computeEnvironmentOrder: pulumi.Output<outputs.batch.JobQueueComputeEnvironmentOrder[]>;
    readonly jobQueueArn: pulumi.Output<string>;
    readonly jobQueueName: pulumi.Output<string | undefined>;
    readonly priority: pulumi.Output<number>;
    readonly schedulingPolicyArn: pulumi.Output<string | undefined>;
    readonly state: pulumi.Output<enums.batch.JobQueueState | undefined>;
    /**
     * A key-value pair to associate with a resource.
     */
    readonly tags: pulumi.Output<any | undefined>;
    /**
     * Create a JobQueue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobQueueArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a JobQueue resource.
 */
export interface JobQueueArgs {
    computeEnvironmentOrder: pulumi.Input<pulumi.Input<inputs.batch.JobQueueComputeEnvironmentOrderArgs>[]>;
    jobQueueName?: pulumi.Input<string>;
    priority: pulumi.Input<number>;
    schedulingPolicyArn?: pulumi.Input<string>;
    state?: pulumi.Input<enums.batch.JobQueueState>;
    /**
     * A key-value pair to associate with a resource.
     */
    tags?: any;
}
