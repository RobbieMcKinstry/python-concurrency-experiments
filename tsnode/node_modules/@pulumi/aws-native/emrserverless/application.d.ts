import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::EMRServerless::Application Type
 */
export declare class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Application;
    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Application;
    /**
     * The ID of the EMR Serverless Application.
     */
    readonly applicationId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the EMR Serverless Application.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Configuration for Auto Start of Application.
     */
    readonly autoStartConfiguration: pulumi.Output<outputs.emrserverless.ApplicationAutoStartConfiguration | undefined>;
    /**
     * Configuration for Auto Stop of Application.
     */
    readonly autoStopConfiguration: pulumi.Output<outputs.emrserverless.ApplicationAutoStopConfiguration | undefined>;
    /**
     * Initial capacity initialized when an Application is started.
     */
    readonly initialCapacity: pulumi.Output<outputs.emrserverless.ApplicationInitialCapacityConfigKeyValuePair[] | undefined>;
    /**
     * Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
     */
    readonly maximumCapacity: pulumi.Output<outputs.emrserverless.ApplicationMaximumAllowedResources | undefined>;
    /**
     * User friendly Application name.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Network Configuration for customer VPC connectivity.
     */
    readonly networkConfiguration: pulumi.Output<outputs.emrserverless.ApplicationNetworkConfiguration | undefined>;
    /**
     * EMR release label.
     */
    readonly releaseLabel: pulumi.Output<string>;
    /**
     * Tag map with key and value
     */
    readonly tags: pulumi.Output<outputs.emrserverless.ApplicationTag[] | undefined>;
    /**
     * The type of the application
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * Configuration for Auto Start of Application.
     */
    autoStartConfiguration?: pulumi.Input<inputs.emrserverless.ApplicationAutoStartConfigurationArgs>;
    /**
     * Configuration for Auto Stop of Application.
     */
    autoStopConfiguration?: pulumi.Input<inputs.emrserverless.ApplicationAutoStopConfigurationArgs>;
    /**
     * Initial capacity initialized when an Application is started.
     */
    initialCapacity?: pulumi.Input<pulumi.Input<inputs.emrserverless.ApplicationInitialCapacityConfigKeyValuePairArgs>[]>;
    /**
     * Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
     */
    maximumCapacity?: pulumi.Input<inputs.emrserverless.ApplicationMaximumAllowedResourcesArgs>;
    /**
     * User friendly Application name.
     */
    name?: pulumi.Input<string>;
    /**
     * Network Configuration for customer VPC connectivity.
     */
    networkConfiguration?: pulumi.Input<inputs.emrserverless.ApplicationNetworkConfigurationArgs>;
    /**
     * EMR release label.
     */
    releaseLabel: pulumi.Input<string>;
    /**
     * Tag map with key and value
     */
    tags?: pulumi.Input<pulumi.Input<inputs.emrserverless.ApplicationTagArgs>[]>;
    /**
     * The type of the application
     */
    type: pulumi.Input<string>;
}
