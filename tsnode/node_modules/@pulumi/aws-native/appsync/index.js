"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Resolver = exports.GraphQLSchema = exports.GraphQLApi = exports.getResolverOutput = exports.getResolver = exports.getGraphQLSchemaOutput = exports.getGraphQLSchema = exports.getGraphQLApiOutput = exports.getGraphQLApi = exports.getFunctionConfigurationOutput = exports.getFunctionConfiguration = exports.getDomainNameApiAssociationOutput = exports.getDomainNameApiAssociation = exports.getDomainNameOutput = exports.getDomainName = exports.getDataSourceOutput = exports.getDataSource = exports.getApiKeyOutput = exports.getApiKey = exports.getApiCacheOutput = exports.getApiCache = exports.FunctionConfiguration = exports.DomainNameApiAssociation = exports.DomainName = exports.DataSource = exports.ApiKey = exports.ApiCache = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ApiCache = null;
utilities.lazyLoad(exports, ["ApiCache"], () => require("./apiCache"));
exports.ApiKey = null;
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));
exports.DataSource = null;
utilities.lazyLoad(exports, ["DataSource"], () => require("./dataSource"));
exports.DomainName = null;
utilities.lazyLoad(exports, ["DomainName"], () => require("./domainName"));
exports.DomainNameApiAssociation = null;
utilities.lazyLoad(exports, ["DomainNameApiAssociation"], () => require("./domainNameApiAssociation"));
exports.FunctionConfiguration = null;
utilities.lazyLoad(exports, ["FunctionConfiguration"], () => require("./functionConfiguration"));
exports.getApiCache = null;
exports.getApiCacheOutput = null;
utilities.lazyLoad(exports, ["getApiCache", "getApiCacheOutput"], () => require("./getApiCache"));
exports.getApiKey = null;
exports.getApiKeyOutput = null;
utilities.lazyLoad(exports, ["getApiKey", "getApiKeyOutput"], () => require("./getApiKey"));
exports.getDataSource = null;
exports.getDataSourceOutput = null;
utilities.lazyLoad(exports, ["getDataSource", "getDataSourceOutput"], () => require("./getDataSource"));
exports.getDomainName = null;
exports.getDomainNameOutput = null;
utilities.lazyLoad(exports, ["getDomainName", "getDomainNameOutput"], () => require("./getDomainName"));
exports.getDomainNameApiAssociation = null;
exports.getDomainNameApiAssociationOutput = null;
utilities.lazyLoad(exports, ["getDomainNameApiAssociation", "getDomainNameApiAssociationOutput"], () => require("./getDomainNameApiAssociation"));
exports.getFunctionConfiguration = null;
exports.getFunctionConfigurationOutput = null;
utilities.lazyLoad(exports, ["getFunctionConfiguration", "getFunctionConfigurationOutput"], () => require("./getFunctionConfiguration"));
exports.getGraphQLApi = null;
exports.getGraphQLApiOutput = null;
utilities.lazyLoad(exports, ["getGraphQLApi", "getGraphQLApiOutput"], () => require("./getGraphQLApi"));
exports.getGraphQLSchema = null;
exports.getGraphQLSchemaOutput = null;
utilities.lazyLoad(exports, ["getGraphQLSchema", "getGraphQLSchemaOutput"], () => require("./getGraphQLSchema"));
exports.getResolver = null;
exports.getResolverOutput = null;
utilities.lazyLoad(exports, ["getResolver", "getResolverOutput"], () => require("./getResolver"));
exports.GraphQLApi = null;
utilities.lazyLoad(exports, ["GraphQLApi"], () => require("./graphQLApi"));
exports.GraphQLSchema = null;
utilities.lazyLoad(exports, ["GraphQLSchema"], () => require("./graphQLSchema"));
exports.Resolver = null;
utilities.lazyLoad(exports, ["Resolver"], () => require("./resolver"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:appsync:ApiCache":
                return new exports.ApiCache(name, undefined, { urn });
            case "aws-native:appsync:ApiKey":
                return new exports.ApiKey(name, undefined, { urn });
            case "aws-native:appsync:DataSource":
                return new exports.DataSource(name, undefined, { urn });
            case "aws-native:appsync:DomainName":
                return new exports.DomainName(name, undefined, { urn });
            case "aws-native:appsync:DomainNameApiAssociation":
                return new exports.DomainNameApiAssociation(name, undefined, { urn });
            case "aws-native:appsync:FunctionConfiguration":
                return new exports.FunctionConfiguration(name, undefined, { urn });
            case "aws-native:appsync:GraphQLApi":
                return new exports.GraphQLApi(name, undefined, { urn });
            case "aws-native:appsync:GraphQLSchema":
                return new exports.GraphQLSchema(name, undefined, { urn });
            case "aws-native:appsync:Resolver":
                return new exports.Resolver(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "appsync", _module);
//# sourceMappingURL=index.js.map