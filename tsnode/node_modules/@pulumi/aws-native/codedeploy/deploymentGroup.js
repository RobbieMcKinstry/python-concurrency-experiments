"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeploymentGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::CodeDeploy::DeploymentGroup
 *
 * @deprecated DeploymentGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class DeploymentGroup extends pulumi.CustomResource {
    /**
     * Create a DeploymentGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated DeploymentGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("DeploymentGroup is deprecated: DeploymentGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.applicationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationName'");
            }
            if ((!args || args.serviceRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceRoleArn'");
            }
            resourceInputs["alarmConfiguration"] = args ? args.alarmConfiguration : undefined;
            resourceInputs["applicationName"] = args ? args.applicationName : undefined;
            resourceInputs["autoRollbackConfiguration"] = args ? args.autoRollbackConfiguration : undefined;
            resourceInputs["autoScalingGroups"] = args ? args.autoScalingGroups : undefined;
            resourceInputs["blueGreenDeploymentConfiguration"] = args ? args.blueGreenDeploymentConfiguration : undefined;
            resourceInputs["deployment"] = args ? args.deployment : undefined;
            resourceInputs["deploymentConfigName"] = args ? args.deploymentConfigName : undefined;
            resourceInputs["deploymentGroupName"] = args ? args.deploymentGroupName : undefined;
            resourceInputs["deploymentStyle"] = args ? args.deploymentStyle : undefined;
            resourceInputs["eCSServices"] = args ? args.eCSServices : undefined;
            resourceInputs["ec2TagFilters"] = args ? args.ec2TagFilters : undefined;
            resourceInputs["ec2TagSet"] = args ? args.ec2TagSet : undefined;
            resourceInputs["loadBalancerInfo"] = args ? args.loadBalancerInfo : undefined;
            resourceInputs["onPremisesInstanceTagFilters"] = args ? args.onPremisesInstanceTagFilters : undefined;
            resourceInputs["onPremisesTagSet"] = args ? args.onPremisesTagSet : undefined;
            resourceInputs["outdatedInstancesStrategy"] = args ? args.outdatedInstancesStrategy : undefined;
            resourceInputs["serviceRoleArn"] = args ? args.serviceRoleArn : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["triggerConfigurations"] = args ? args.triggerConfigurations : undefined;
        }
        else {
            resourceInputs["alarmConfiguration"] = undefined /*out*/;
            resourceInputs["applicationName"] = undefined /*out*/;
            resourceInputs["autoRollbackConfiguration"] = undefined /*out*/;
            resourceInputs["autoScalingGroups"] = undefined /*out*/;
            resourceInputs["blueGreenDeploymentConfiguration"] = undefined /*out*/;
            resourceInputs["deployment"] = undefined /*out*/;
            resourceInputs["deploymentConfigName"] = undefined /*out*/;
            resourceInputs["deploymentGroupName"] = undefined /*out*/;
            resourceInputs["deploymentStyle"] = undefined /*out*/;
            resourceInputs["eCSServices"] = undefined /*out*/;
            resourceInputs["ec2TagFilters"] = undefined /*out*/;
            resourceInputs["ec2TagSet"] = undefined /*out*/;
            resourceInputs["loadBalancerInfo"] = undefined /*out*/;
            resourceInputs["onPremisesInstanceTagFilters"] = undefined /*out*/;
            resourceInputs["onPremisesTagSet"] = undefined /*out*/;
            resourceInputs["outdatedInstancesStrategy"] = undefined /*out*/;
            resourceInputs["serviceRoleArn"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["triggerConfigurations"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeploymentGroup.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing DeploymentGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("DeploymentGroup is deprecated: DeploymentGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new DeploymentGroup(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DeploymentGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeploymentGroup.__pulumiType;
    }
}
exports.DeploymentGroup = DeploymentGroup;
/** @internal */
DeploymentGroup.__pulumiType = 'aws-native:codedeploy:DeploymentGroup';
//# sourceMappingURL=deploymentGroup.js.map