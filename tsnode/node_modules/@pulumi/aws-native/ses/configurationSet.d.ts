import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::SES::ConfigurationSet.
 */
export declare class ConfigurationSet extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConfigurationSet;
    /**
     * Returns true if the given object is an instance of ConfigurationSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConfigurationSet;
    readonly deliveryOptions: pulumi.Output<outputs.ses.ConfigurationSetDeliveryOptions | undefined>;
    /**
     * The name of the configuration set.
     */
    readonly name: pulumi.Output<string | undefined>;
    readonly reputationOptions: pulumi.Output<outputs.ses.ConfigurationSetReputationOptions | undefined>;
    readonly sendingOptions: pulumi.Output<outputs.ses.ConfigurationSetSendingOptions | undefined>;
    readonly suppressionOptions: pulumi.Output<outputs.ses.ConfigurationSetSuppressionOptions | undefined>;
    readonly trackingOptions: pulumi.Output<outputs.ses.ConfigurationSetTrackingOptions | undefined>;
    /**
     * Create a ConfigurationSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConfigurationSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ConfigurationSet resource.
 */
export interface ConfigurationSetArgs {
    deliveryOptions?: pulumi.Input<inputs.ses.ConfigurationSetDeliveryOptionsArgs>;
    /**
     * The name of the configuration set.
     */
    name?: pulumi.Input<string>;
    reputationOptions?: pulumi.Input<inputs.ses.ConfigurationSetReputationOptionsArgs>;
    sendingOptions?: pulumi.Input<inputs.ses.ConfigurationSetSendingOptionsArgs>;
    suppressionOptions?: pulumi.Input<inputs.ses.ConfigurationSetSuppressionOptionsArgs>;
    trackingOptions?: pulumi.Input<inputs.ses.ConfigurationSetTrackingOptionsArgs>;
}
