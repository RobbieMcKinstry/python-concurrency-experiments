import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::SES::EmailIdentity
 */
export declare class EmailIdentity extends pulumi.CustomResource {
    /**
     * Get an existing EmailIdentity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EmailIdentity;
    /**
     * Returns true if the given object is an instance of EmailIdentity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EmailIdentity;
    readonly configurationSetAttributes: pulumi.Output<outputs.ses.EmailIdentityConfigurationSetAttributes | undefined>;
    readonly dkimAttributes: pulumi.Output<outputs.ses.EmailIdentityDkimAttributes | undefined>;
    readonly dkimDNSTokenName1: pulumi.Output<string>;
    readonly dkimDNSTokenName2: pulumi.Output<string>;
    readonly dkimDNSTokenName3: pulumi.Output<string>;
    readonly dkimDNSTokenValue1: pulumi.Output<string>;
    readonly dkimDNSTokenValue2: pulumi.Output<string>;
    readonly dkimDNSTokenValue3: pulumi.Output<string>;
    readonly dkimSigningAttributes: pulumi.Output<outputs.ses.EmailIdentityDkimSigningAttributes | undefined>;
    /**
     * The email address or domain to verify.
     */
    readonly emailIdentity: pulumi.Output<string>;
    readonly feedbackAttributes: pulumi.Output<outputs.ses.EmailIdentityFeedbackAttributes | undefined>;
    readonly mailFromAttributes: pulumi.Output<outputs.ses.EmailIdentityMailFromAttributes | undefined>;
    /**
     * Create a EmailIdentity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailIdentityArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a EmailIdentity resource.
 */
export interface EmailIdentityArgs {
    configurationSetAttributes?: pulumi.Input<inputs.ses.EmailIdentityConfigurationSetAttributesArgs>;
    dkimAttributes?: pulumi.Input<inputs.ses.EmailIdentityDkimAttributesArgs>;
    dkimSigningAttributes?: pulumi.Input<inputs.ses.EmailIdentityDkimSigningAttributesArgs>;
    /**
     * The email address or domain to verify.
     */
    emailIdentity: pulumi.Input<string>;
    feedbackAttributes?: pulumi.Input<inputs.ses.EmailIdentityFeedbackAttributesArgs>;
    mailFromAttributes?: pulumi.Input<inputs.ses.EmailIdentityMailFromAttributesArgs>;
}
