import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::LicenseManager::License
 */
export declare function getLicense(args: GetLicenseArgs, opts?: pulumi.InvokeOptions): Promise<GetLicenseResult>;
export interface GetLicenseArgs {
    /**
     * Amazon Resource Name is a unique name for each resource.
     */
    licenseArn: string;
}
export interface GetLicenseResult {
    /**
     * Beneficiary of the license.
     */
    readonly beneficiary?: string;
    readonly consumptionConfiguration?: outputs.licensemanager.LicenseConsumptionConfiguration;
    readonly entitlements?: outputs.licensemanager.LicenseEntitlement[];
    /**
     * Home region for the created license.
     */
    readonly homeRegion?: string;
    readonly issuer?: outputs.licensemanager.LicenseIssuerData;
    /**
     * Amazon Resource Name is a unique name for each resource.
     */
    readonly licenseArn?: string;
    readonly licenseMetadata?: outputs.licensemanager.LicenseMetadata[];
    /**
     * Name for the created license.
     */
    readonly licenseName?: string;
    /**
     * Product name for the created license.
     */
    readonly productName?: string;
    /**
     * ProductSKU of the license.
     */
    readonly productSKU?: string;
    readonly validity?: outputs.licensemanager.LicenseValidityDateFormat;
    /**
     * The version of the license.
     */
    readonly version?: string;
}
export declare function getLicenseOutput(args: GetLicenseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLicenseResult>;
export interface GetLicenseOutputArgs {
    /**
     * Amazon Resource Name is a unique name for each resource.
     */
    licenseArn: pulumi.Input<string>;
}
