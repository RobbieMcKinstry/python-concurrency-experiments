"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnomalySubscription = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
 *
 * @deprecated AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class AnomalySubscription extends pulumi.CustomResource {
    /**
     * Create a AnomalySubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("AnomalySubscription is deprecated: AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.frequency === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frequency'");
            }
            if ((!args || args.monitorArnList === undefined) && !opts.urn) {
                throw new Error("Missing required property 'monitorArnList'");
            }
            if ((!args || args.subscribers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscribers'");
            }
            if ((!args || args.subscriptionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionName'");
            }
            if ((!args || args.threshold === undefined) && !opts.urn) {
                throw new Error("Missing required property 'threshold'");
            }
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["monitorArnList"] = args ? args.monitorArnList : undefined;
            resourceInputs["resourceTags"] = args ? args.resourceTags : undefined;
            resourceInputs["subscribers"] = args ? args.subscribers : undefined;
            resourceInputs["subscriptionName"] = args ? args.subscriptionName : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["subscriptionArn"] = undefined /*out*/;
        }
        else {
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["frequency"] = undefined /*out*/;
            resourceInputs["monitorArnList"] = undefined /*out*/;
            resourceInputs["resourceTags"] = undefined /*out*/;
            resourceInputs["subscribers"] = undefined /*out*/;
            resourceInputs["subscriptionArn"] = undefined /*out*/;
            resourceInputs["subscriptionName"] = undefined /*out*/;
            resourceInputs["threshold"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AnomalySubscription.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing AnomalySubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("AnomalySubscription is deprecated: AnomalySubscription is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new AnomalySubscription(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AnomalySubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnomalySubscription.__pulumiType;
    }
}
exports.AnomalySubscription = AnomalySubscription;
/** @internal */
AnomalySubscription.__pulumiType = 'aws-native:ce:AnomalySubscription';
//# sourceMappingURL=anomalySubscription.js.map