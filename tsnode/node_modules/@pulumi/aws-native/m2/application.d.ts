import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Represents an application that runs on an AWS Mainframe Modernization Environment
 */
export declare class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Application;
    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Application;
    readonly applicationArn: pulumi.Output<string>;
    readonly applicationId: pulumi.Output<string>;
    readonly definition: pulumi.Output<outputs.m2.ApplicationDefinition>;
    readonly description: pulumi.Output<string | undefined>;
    readonly engineType: pulumi.Output<enums.m2.ApplicationEngineType>;
    readonly name: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.m2.ApplicationTagMap | undefined>;
    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    definition: pulumi.Input<inputs.m2.ApplicationDefinitionArgs>;
    description?: pulumi.Input<string>;
    engineType: pulumi.Input<enums.m2.ApplicationEngineType>;
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<inputs.m2.ApplicationTagMapArgs>;
}
