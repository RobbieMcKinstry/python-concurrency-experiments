import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult>;
export interface GetDomainArgs {
    domainName: string;
}
export interface GetDomainResult {
    readonly accessPolicies?: any;
    readonly advancedOptions?: any;
    readonly advancedSecurityOptions?: outputs.opensearchservice.DomainAdvancedSecurityOptionsInput;
    readonly arn?: string;
    readonly clusterConfig?: outputs.opensearchservice.DomainClusterConfig;
    readonly cognitoOptions?: outputs.opensearchservice.DomainCognitoOptions;
    readonly domainArn?: string;
    readonly domainEndpoint?: string;
    readonly domainEndpointOptions?: outputs.opensearchservice.DomainEndpointOptions;
    readonly domainEndpoints?: any;
    readonly eBSOptions?: outputs.opensearchservice.DomainEBSOptions;
    readonly encryptionAtRestOptions?: outputs.opensearchservice.DomainEncryptionAtRestOptions;
    readonly engineVersion?: string;
    readonly id?: string;
    readonly logPublishingOptions?: any;
    readonly nodeToNodeEncryptionOptions?: outputs.opensearchservice.DomainNodeToNodeEncryptionOptions;
    readonly serviceSoftwareOptions?: outputs.opensearchservice.DomainServiceSoftwareOptions;
    readonly snapshotOptions?: outputs.opensearchservice.DomainSnapshotOptions;
    /**
     * An arbitrary set of tags (key-value pairs) for this Domain.
     */
    readonly tags?: outputs.opensearchservice.DomainTag[];
    readonly vPCOptions?: outputs.opensearchservice.DomainVPCOptions;
}
export declare function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult>;
export interface GetDomainOutputArgs {
    domainName: pulumi.Input<string>;
}
