import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Evidently::Experiment.
 */
export declare class Experiment extends pulumi.CustomResource {
    /**
     * Get an existing Experiment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Experiment;
    /**
     * Returns true if the given object is an instance of Experiment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Experiment;
    readonly arn: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly metricGoals: pulumi.Output<outputs.evidently.ExperimentMetricGoalObject[]>;
    readonly name: pulumi.Output<string>;
    readonly onlineAbConfig: pulumi.Output<outputs.evidently.ExperimentOnlineAbConfigObject>;
    readonly project: pulumi.Output<string>;
    readonly randomizationSalt: pulumi.Output<string | undefined>;
    readonly removeSegment: pulumi.Output<boolean | undefined>;
    /**
     * Start Experiment. Default is False
     */
    readonly runningStatus: pulumi.Output<outputs.evidently.ExperimentRunningStatusObject | undefined>;
    readonly samplingRate: pulumi.Output<number | undefined>;
    readonly segment: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.evidently.ExperimentTag[] | undefined>;
    readonly treatments: pulumi.Output<outputs.evidently.ExperimentTreatmentObject[]>;
    /**
     * Create a Experiment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExperimentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Experiment resource.
 */
export interface ExperimentArgs {
    description?: pulumi.Input<string>;
    metricGoals: pulumi.Input<pulumi.Input<inputs.evidently.ExperimentMetricGoalObjectArgs>[]>;
    name?: pulumi.Input<string>;
    onlineAbConfig: pulumi.Input<inputs.evidently.ExperimentOnlineAbConfigObjectArgs>;
    project: pulumi.Input<string>;
    randomizationSalt?: pulumi.Input<string>;
    removeSegment?: pulumi.Input<boolean>;
    /**
     * Start Experiment. Default is False
     */
    runningStatus?: pulumi.Input<inputs.evidently.ExperimentRunningStatusObjectArgs>;
    samplingRate?: pulumi.Input<number>;
    segment?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.evidently.ExperimentTagArgs>[]>;
    treatments: pulumi.Input<pulumi.Input<inputs.evidently.ExperimentTreatmentObjectArgs>[]>;
}
