"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventBusPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::Events::EventBusPolicy
 *
 * @deprecated EventBusPolicy is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class EventBusPolicy extends pulumi.CustomResource {
    /**
     * Create a EventBusPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated EventBusPolicy is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("EventBusPolicy is deprecated: EventBusPolicy is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.statementId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'statementId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["condition"] = args ? args.condition : undefined;
            resourceInputs["eventBusName"] = args ? args.eventBusName : undefined;
            resourceInputs["principal"] = args ? args.principal : undefined;
            resourceInputs["statement"] = args ? args.statement : undefined;
            resourceInputs["statementId"] = args ? args.statementId : undefined;
        }
        else {
            resourceInputs["action"] = undefined /*out*/;
            resourceInputs["condition"] = undefined /*out*/;
            resourceInputs["eventBusName"] = undefined /*out*/;
            resourceInputs["principal"] = undefined /*out*/;
            resourceInputs["statement"] = undefined /*out*/;
            resourceInputs["statementId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EventBusPolicy.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing EventBusPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("EventBusPolicy is deprecated: EventBusPolicy is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new EventBusPolicy(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of EventBusPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventBusPolicy.__pulumiType;
    }
}
exports.EventBusPolicy = EventBusPolicy;
/** @internal */
EventBusPolicy.__pulumiType = 'aws-native:events:EventBusPolicy';
//# sourceMappingURL=eventBusPolicy.js.map