import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lightsail::Bucket
 */
export declare function getBucket(args: GetBucketArgs, opts?: pulumi.InvokeOptions): Promise<GetBucketResult>;
export interface GetBucketArgs {
    /**
     * The name for the bucket.
     */
    bucketName: string;
}
export interface GetBucketResult {
    /**
     * Indicates whether the bundle that is currently applied to a bucket can be changed to another bundle. You can update a bucket's bundle only one time within a monthly AWS billing cycle.
     */
    readonly ableToUpdateBundle?: boolean;
    readonly accessRules?: outputs.lightsail.BucketAccessRules;
    readonly bucketArn?: string;
    /**
     * The ID of the bundle to use for the bucket.
     */
    readonly bundleId?: string;
    /**
     * Specifies whether to enable or disable versioning of objects in the bucket.
     */
    readonly objectVersioning?: boolean;
    /**
     * An array of strings to specify the AWS account IDs that can access the bucket.
     */
    readonly readOnlyAccessAccounts?: string[];
    /**
     * The names of the Lightsail resources for which to set bucket access.
     */
    readonly resourcesReceivingAccess?: string[];
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.lightsail.BucketTag[];
    /**
     * The URL of the bucket.
     */
    readonly url?: string;
}
export declare function getBucketOutput(args: GetBucketOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBucketResult>;
export interface GetBucketOutputArgs {
    /**
     * The name for the bucket.
     */
    bucketName: pulumi.Input<string>;
}
