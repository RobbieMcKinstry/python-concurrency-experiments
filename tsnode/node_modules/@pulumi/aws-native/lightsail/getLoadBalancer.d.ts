import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lightsail::LoadBalancer
 */
export declare function getLoadBalancer(args: GetLoadBalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerResult>;
export interface GetLoadBalancerArgs {
    /**
     * The name of your load balancer.
     */
    loadBalancerName: string;
}
export interface GetLoadBalancerResult {
    /**
     * The names of the instances attached to the load balancer.
     */
    readonly attachedInstances?: string[];
    /**
     * The path you provided to perform the load balancer health check. If you didn't specify a health check path, Lightsail uses the root path of your website (e.g., "/").
     */
    readonly healthCheckPath?: string;
    readonly loadBalancerArn?: string;
    /**
     * Configuration option to enable session stickiness.
     */
    readonly sessionStickinessEnabled?: boolean;
    /**
     * Configuration option to adjust session stickiness cookie duration parameter.
     */
    readonly sessionStickinessLBCookieDurationSeconds?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.lightsail.LoadBalancerTag[];
    /**
     * The name of the TLS policy to apply to the load balancer.
     */
    readonly tlsPolicyName?: string;
}
export declare function getLoadBalancerOutput(args: GetLoadBalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerResult>;
export interface GetLoadBalancerOutputArgs {
    /**
     * The name of your load balancer.
     */
    loadBalancerName: pulumi.Input<string>;
}
