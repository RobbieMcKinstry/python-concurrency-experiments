import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lightsail::Container
 */
export declare function getContainer(args: GetContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerResult>;
export interface GetContainerArgs {
    /**
     * The name for the container service.
     */
    serviceName: string;
}
export interface GetContainerResult {
    readonly containerArn?: string;
    /**
     * Describes a container deployment configuration of an Amazon Lightsail container service.
     */
    readonly containerServiceDeployment?: outputs.lightsail.ContainerServiceDeployment;
    /**
     * A Boolean value to indicate whether the container service is disabled.
     */
    readonly isDisabled?: boolean;
    /**
     * The power specification for the container service.
     */
    readonly power?: string;
    /**
     * The public domain names to use with the container service, such as example.com and www.example.com.
     */
    readonly publicDomainNames?: outputs.lightsail.ContainerPublicDomainName[];
    /**
     * The scale specification for the container service.
     */
    readonly scale?: number;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.lightsail.ContainerTag[];
    /**
     * The publicly accessible URL of the container service.
     */
    readonly url?: string;
}
export declare function getContainerOutput(args: GetContainerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerResult>;
export interface GetContainerOutputArgs {
    /**
     * The name for the container service.
     */
    serviceName: pulumi.Input<string>;
}
