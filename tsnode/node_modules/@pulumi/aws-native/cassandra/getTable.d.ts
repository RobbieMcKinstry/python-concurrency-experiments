import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::Cassandra::Table
 */
export declare function getTable(args: GetTableArgs, opts?: pulumi.InvokeOptions): Promise<GetTableResult>;
export interface GetTableArgs {
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: string;
    /**
     * Name for Cassandra table
     */
    tableName: string;
}
export interface GetTableResult {
    readonly billingMode?: outputs.cassandra.TableBillingMode;
    /**
     * Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
     */
    readonly defaultTimeToLive?: number;
    readonly encryptionSpecification?: outputs.cassandra.TableEncryptionSpecification;
    /**
     * Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
     */
    readonly pointInTimeRecoveryEnabled?: boolean;
    /**
     * Non-key columns of the table
     */
    readonly regularColumns?: outputs.cassandra.TableColumn[];
    /**
     * An array of key-value pairs to apply to this resource
     */
    readonly tags?: outputs.cassandra.TableTag[];
}
export declare function getTableOutput(args: GetTableOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTableResult>;
export interface GetTableOutputArgs {
    /**
     * Name for Cassandra keyspace
     */
    keyspaceName: pulumi.Input<string>;
    /**
     * Name for Cassandra table
     */
    tableName: pulumi.Input<string>;
}
