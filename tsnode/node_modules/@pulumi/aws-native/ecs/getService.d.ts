import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::ECS::Service
 */
export declare function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult>;
export interface GetServiceArgs {
    cluster: string;
    serviceArn: string;
}
export interface GetServiceResult {
    readonly capacityProviderStrategy?: outputs.ecs.ServiceCapacityProviderStrategyItem[];
    readonly deploymentConfiguration?: outputs.ecs.ServiceDeploymentConfiguration;
    readonly desiredCount?: number;
    readonly enableECSManagedTags?: boolean;
    readonly enableExecuteCommand?: boolean;
    readonly healthCheckGracePeriodSeconds?: number;
    readonly loadBalancers?: outputs.ecs.ServiceLoadBalancer[];
    readonly name?: string;
    readonly networkConfiguration?: outputs.ecs.ServiceNetworkConfiguration;
    readonly placementConstraints?: outputs.ecs.ServicePlacementConstraint[];
    readonly placementStrategies?: outputs.ecs.ServicePlacementStrategy[];
    readonly platformVersion?: string;
    readonly propagateTags?: enums.ecs.ServicePropagateTags;
    readonly serviceArn?: string;
    readonly serviceRegistries?: outputs.ecs.ServiceRegistry[];
    readonly tags?: outputs.ecs.ServiceTag[];
    readonly taskDefinition?: string;
}
export declare function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult>;
export interface GetServiceOutputArgs {
    cluster: pulumi.Input<string>;
    serviceArn: pulumi.Input<string>;
}
