import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Create an Elastic Container Service (ECS) cluster.
 */
export declare function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult>;
export interface GetClusterArgs {
    /**
     * A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.
     */
    clusterName: string;
}
export interface GetClusterResult {
    /**
     * The Amazon Resource Name (ARN) of the Amazon ECS cluster, such as arn:aws:ecs:us-east-2:123456789012:cluster/MyECSCluster.
     */
    readonly arn?: string;
    readonly capacityProviders?: string[];
    readonly clusterSettings?: outputs.ecs.ClusterSettings[];
    readonly configuration?: outputs.ecs.ClusterConfiguration;
    readonly defaultCapacityProviderStrategy?: outputs.ecs.ClusterCapacityProviderStrategyItem[];
    readonly tags?: outputs.ecs.ClusterTag[];
}
export declare function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterResult>;
export interface GetClusterOutputArgs {
    /**
     * A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.
     */
    clusterName: pulumi.Input<string>;
}
