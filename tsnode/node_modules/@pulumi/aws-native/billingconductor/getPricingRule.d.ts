import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A markup/discount that is defined for a specific set of services that can later be associated with a pricing plan.
 */
export declare function getPricingRule(args: GetPricingRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetPricingRuleResult>;
export interface GetPricingRuleArgs {
    /**
     * Pricing rule ARN
     */
    arn: string;
}
export interface GetPricingRuleResult {
    /**
     * Pricing rule ARN
     */
    readonly arn?: string;
    /**
     * The number of pricing plans associated with pricing rule
     */
    readonly associatedPricingPlanCount?: number;
    /**
     * Creation timestamp in UNIX epoch time format
     */
    readonly creationTime?: number;
    /**
     * Pricing rule description
     */
    readonly description?: string;
    /**
     * Latest modified timestamp in UNIX epoch time format
     */
    readonly lastModifiedTime?: number;
    /**
     * Pricing rule modifier percentage
     */
    readonly modifierPercentage?: number;
    /**
     * Pricing rule name
     */
    readonly name?: string;
    readonly tags?: outputs.billingconductor.PricingRuleTag[];
    /**
     * One of MARKUP or DISCOUNT that describes the direction of the rate that is applied to a pricing plan.
     */
    readonly type?: enums.billingconductor.PricingRuleType;
}
export declare function getPricingRuleOutput(args: GetPricingRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPricingRuleResult>;
export interface GetPricingRuleOutputArgs {
    /**
     * Pricing rule ARN
     */
    arn: pulumi.Input<string>;
}
