import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A markup/discount that is defined for a specific set of services that can later be associated with a pricing plan.
 *
 * @deprecated PricingRule is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class PricingRule extends pulumi.CustomResource {
    /**
     * Get an existing PricingRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PricingRule;
    /**
     * Returns true if the given object is an instance of PricingRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PricingRule;
    /**
     * Pricing rule ARN
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The number of pricing plans associated with pricing rule
     */
    readonly associatedPricingPlanCount: pulumi.Output<number>;
    /**
     * Creation timestamp in UNIX epoch time format
     */
    readonly creationTime: pulumi.Output<number>;
    /**
     * Pricing rule description
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Latest modified timestamp in UNIX epoch time format
     */
    readonly lastModifiedTime: pulumi.Output<number>;
    /**
     * Pricing rule modifier percentage
     */
    readonly modifierPercentage: pulumi.Output<number>;
    /**
     * Pricing rule name
     */
    readonly name: pulumi.Output<string>;
    /**
     * A term used to categorize the granularity of a Pricing Rule.
     */
    readonly scope: pulumi.Output<enums.billingconductor.PricingRuleScope>;
    /**
     * The service which a pricing rule is applied on
     */
    readonly service: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.billingconductor.PricingRuleTag[] | undefined>;
    /**
     * One of MARKUP or DISCOUNT that describes the direction of the rate that is applied to a pricing plan.
     */
    readonly type: pulumi.Output<enums.billingconductor.PricingRuleType>;
    /**
     * Create a PricingRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated PricingRule is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: PricingRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PricingRule resource.
 */
export interface PricingRuleArgs {
    /**
     * Pricing rule description
     */
    description?: pulumi.Input<string>;
    /**
     * Pricing rule modifier percentage
     */
    modifierPercentage: pulumi.Input<number>;
    /**
     * Pricing rule name
     */
    name?: pulumi.Input<string>;
    /**
     * A term used to categorize the granularity of a Pricing Rule.
     */
    scope: pulumi.Input<enums.billingconductor.PricingRuleScope>;
    /**
     * The service which a pricing rule is applied on
     */
    service?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.billingconductor.PricingRuleTagArgs>[]>;
    /**
     * One of MARKUP or DISCOUNT that describes the direction of the rate that is applied to a pricing plan.
     */
    type: pulumi.Input<enums.billingconductor.PricingRuleType>;
}
