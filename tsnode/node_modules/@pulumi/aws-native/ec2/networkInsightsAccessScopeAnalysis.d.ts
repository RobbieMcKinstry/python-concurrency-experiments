import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::EC2::NetworkInsightsAccessScopeAnalysis
 */
export declare class NetworkInsightsAccessScopeAnalysis extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInsightsAccessScopeAnalysis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkInsightsAccessScopeAnalysis;
    /**
     * Returns true if the given object is an instance of NetworkInsightsAccessScopeAnalysis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkInsightsAccessScopeAnalysis;
    readonly analyzedEniCount: pulumi.Output<number>;
    readonly endDate: pulumi.Output<string>;
    readonly findingsFound: pulumi.Output<enums.ec2.NetworkInsightsAccessScopeAnalysisFindingsFound>;
    readonly networkInsightsAccessScopeAnalysisArn: pulumi.Output<string>;
    readonly networkInsightsAccessScopeAnalysisId: pulumi.Output<string>;
    readonly networkInsightsAccessScopeId: pulumi.Output<string>;
    readonly startDate: pulumi.Output<string>;
    readonly status: pulumi.Output<enums.ec2.NetworkInsightsAccessScopeAnalysisStatus>;
    readonly statusMessage: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.ec2.NetworkInsightsAccessScopeAnalysisTag[] | undefined>;
    /**
     * Create a NetworkInsightsAccessScopeAnalysis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInsightsAccessScopeAnalysisArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkInsightsAccessScopeAnalysis resource.
 */
export interface NetworkInsightsAccessScopeAnalysisArgs {
    networkInsightsAccessScopeId: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.NetworkInsightsAccessScopeAnalysisTagArgs>[]>;
}
