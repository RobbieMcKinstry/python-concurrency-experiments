import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::EC2::Subnet
 */
export declare class Subnet extends pulumi.CustomResource {
    /**
     * Get an existing Subnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Subnet;
    /**
     * Returns true if the given object is an instance of Subnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Subnet;
    readonly assignIpv6AddressOnCreation: pulumi.Output<boolean | undefined>;
    readonly availabilityZone: pulumi.Output<string | undefined>;
    readonly availabilityZoneId: pulumi.Output<string | undefined>;
    readonly cidrBlock: pulumi.Output<string | undefined>;
    readonly enableDns64: pulumi.Output<boolean | undefined>;
    readonly ipv6CidrBlock: pulumi.Output<string | undefined>;
    readonly ipv6CidrBlocks: pulumi.Output<string[]>;
    readonly ipv6Native: pulumi.Output<boolean | undefined>;
    readonly mapPublicIpOnLaunch: pulumi.Output<boolean | undefined>;
    readonly networkAclAssociationId: pulumi.Output<string>;
    readonly outpostArn: pulumi.Output<string | undefined>;
    readonly privateDnsNameOptionsOnLaunch: pulumi.Output<outputs.ec2.PrivateDnsNameOptionsOnLaunchProperties | undefined>;
    readonly subnetId: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.ec2.SubnetTag[] | undefined>;
    readonly vpcId: pulumi.Output<string>;
    /**
     * Create a Subnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubnetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Subnet resource.
 */
export interface SubnetArgs {
    assignIpv6AddressOnCreation?: pulumi.Input<boolean>;
    availabilityZone?: pulumi.Input<string>;
    availabilityZoneId?: pulumi.Input<string>;
    cidrBlock?: pulumi.Input<string>;
    enableDns64?: pulumi.Input<boolean>;
    ipv6CidrBlock?: pulumi.Input<string>;
    ipv6Native?: pulumi.Input<boolean>;
    mapPublicIpOnLaunch?: pulumi.Input<boolean>;
    outpostArn?: pulumi.Input<string>;
    privateDnsNameOptionsOnLaunch?: pulumi.Input<inputs.ec2.PrivateDnsNameOptionsOnLaunchPropertiesArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.SubnetTagArgs>[]>;
    vpcId: pulumi.Input<string>;
}
