import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The AWS::EC2::KeyPair creates an SSH key pair
 */
export declare class KeyPair extends pulumi.CustomResource {
    /**
     * Get an existing KeyPair resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KeyPair;
    /**
     * Returns true if the given object is an instance of KeyPair.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KeyPair;
    /**
     * A short sequence of bytes used for public key verification
     */
    readonly keyFingerprint: pulumi.Output<string>;
    /**
     * The name of the SSH key pair
     */
    readonly keyName: pulumi.Output<string>;
    /**
     * An AWS generated ID for the key pair
     */
    readonly keyPairId: pulumi.Output<string>;
    /**
     * The title of the TPS report is a mandatory element.
     */
    readonly keyType: pulumi.Output<enums.ec2.KeyPairKeyType | undefined>;
    /**
     * Plain text public key to import
     */
    readonly publicKeyMaterial: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.ec2.KeyPairTag[] | undefined>;
    /**
     * Create a KeyPair resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KeyPairArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KeyPair resource.
 */
export interface KeyPairArgs {
    /**
     * The name of the SSH key pair
     */
    keyName: pulumi.Input<string>;
    /**
     * The title of the TPS report is a mandatory element.
     */
    keyType?: pulumi.Input<enums.ec2.KeyPairKeyType>;
    /**
     * Plain text public key to import
     */
    publicKeyMaterial?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.KeyPairTagArgs>[]>;
}
