import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::EC2::VPNConnection
 */
export declare class VPNConnection extends pulumi.CustomResource {
    /**
     * Get an existing VPNConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VPNConnection;
    /**
     * Returns true if the given object is an instance of VPNConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VPNConnection;
    /**
     * The ID of the customer gateway at your end of the VPN connection.
     */
    readonly customerGatewayId: pulumi.Output<string>;
    /**
     * Indicates whether the VPN connection uses static routes only.
     */
    readonly staticRoutesOnly: pulumi.Output<boolean | undefined>;
    /**
     * Any tags assigned to the VPN connection.
     */
    readonly tags: pulumi.Output<outputs.ec2.VPNConnectionTag[] | undefined>;
    /**
     * The ID of the transit gateway associated with the VPN connection.
     */
    readonly transitGatewayId: pulumi.Output<string | undefined>;
    /**
     * The type of VPN connection.
     */
    readonly type: pulumi.Output<string>;
    /**
     * The provider-assigned unique ID for this managed resource
     */
    readonly vpnConnectionId: pulumi.Output<string>;
    /**
     * The ID of the virtual private gateway at the AWS side of the VPN connection.
     */
    readonly vpnGatewayId: pulumi.Output<string | undefined>;
    /**
     * The tunnel options for the VPN connection.
     */
    readonly vpnTunnelOptionsSpecifications: pulumi.Output<outputs.ec2.VPNConnectionVpnTunnelOptionsSpecification[] | undefined>;
    /**
     * Create a VPNConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VPNConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VPNConnection resource.
 */
export interface VPNConnectionArgs {
    /**
     * The ID of the customer gateway at your end of the VPN connection.
     */
    customerGatewayId: pulumi.Input<string>;
    /**
     * Indicates whether the VPN connection uses static routes only.
     */
    staticRoutesOnly?: pulumi.Input<boolean>;
    /**
     * Any tags assigned to the VPN connection.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ec2.VPNConnectionTagArgs>[]>;
    /**
     * The ID of the transit gateway associated with the VPN connection.
     */
    transitGatewayId?: pulumi.Input<string>;
    /**
     * The type of VPN connection.
     */
    type: pulumi.Input<string>;
    /**
     * The ID of the virtual private gateway at the AWS side of the VPN connection.
     */
    vpnGatewayId?: pulumi.Input<string>;
    /**
     * The tunnel options for the VPN connection.
     */
    vpnTunnelOptionsSpecifications?: pulumi.Input<pulumi.Input<inputs.ec2.VPNConnectionVpnTunnelOptionsSpecificationArgs>[]>;
}
