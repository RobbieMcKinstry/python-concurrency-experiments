import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::EC2::Instance
 */
export declare function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult>;
export interface GetInstanceArgs {
    id: string;
}
export interface GetInstanceResult {
    readonly additionalInfo?: string;
    readonly affinity?: string;
    readonly blockDeviceMappings?: outputs.ec2.InstanceBlockDeviceMapping[];
    readonly creditSpecification?: outputs.ec2.InstanceCreditSpecification;
    readonly disableApiTermination?: boolean;
    readonly ebsOptimized?: boolean;
    readonly hostId?: string;
    readonly iamInstanceProfile?: string;
    readonly id?: string;
    readonly instanceInitiatedShutdownBehavior?: string;
    readonly instanceType?: string;
    readonly kernelId?: string;
    readonly monitoring?: boolean;
    readonly privateDnsName?: string;
    readonly privateDnsNameOptions?: outputs.ec2.InstancePrivateDnsNameOptions;
    readonly privateIp?: string;
    readonly propagateTagsToVolumeOnCreation?: boolean;
    readonly publicDnsName?: string;
    readonly publicIp?: string;
    readonly ramdiskId?: string;
    readonly securityGroupIds?: string[];
    readonly sourceDestCheck?: boolean;
    readonly ssmAssociations?: outputs.ec2.InstanceSsmAssociation[];
    readonly tags?: outputs.ec2.InstanceTag[];
    readonly tenancy?: string;
    readonly userData?: string;
    readonly volumes?: outputs.ec2.InstanceVolume[];
}
export declare function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceResult>;
export interface GetInstanceOutputArgs {
    id: pulumi.Input<string>;
}
