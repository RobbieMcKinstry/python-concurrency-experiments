export { ApiArgs } from "./api";
export declare type Api = import("./api").Api;
export declare const Api: typeof import("./api").Api;
export { ApiGatewayManagedOverridesArgs } from "./apiGatewayManagedOverrides";
export declare type ApiGatewayManagedOverrides = import("./apiGatewayManagedOverrides").ApiGatewayManagedOverrides;
export declare const ApiGatewayManagedOverrides: typeof import("./apiGatewayManagedOverrides").ApiGatewayManagedOverrides;
export { ApiMappingArgs } from "./apiMapping";
export declare type ApiMapping = import("./apiMapping").ApiMapping;
export declare const ApiMapping: typeof import("./apiMapping").ApiMapping;
export { AuthorizerArgs } from "./authorizer";
export declare type Authorizer = import("./authorizer").Authorizer;
export declare const Authorizer: typeof import("./authorizer").Authorizer;
export { DeploymentArgs } from "./deployment";
export declare type Deployment = import("./deployment").Deployment;
export declare const Deployment: typeof import("./deployment").Deployment;
export { DomainNameArgs } from "./domainName";
export declare type DomainName = import("./domainName").DomainName;
export declare const DomainName: typeof import("./domainName").DomainName;
export { GetApiArgs, GetApiResult, GetApiOutputArgs } from "./getApi";
export declare const getApi: typeof import("./getApi").getApi;
export declare const getApiOutput: typeof import("./getApi").getApiOutput;
export { GetApiGatewayManagedOverridesArgs, GetApiGatewayManagedOverridesResult, GetApiGatewayManagedOverridesOutputArgs } from "./getApiGatewayManagedOverrides";
export declare const getApiGatewayManagedOverrides: typeof import("./getApiGatewayManagedOverrides").getApiGatewayManagedOverrides;
export declare const getApiGatewayManagedOverridesOutput: typeof import("./getApiGatewayManagedOverrides").getApiGatewayManagedOverridesOutput;
export { GetApiMappingArgs, GetApiMappingResult, GetApiMappingOutputArgs } from "./getApiMapping";
export declare const getApiMapping: typeof import("./getApiMapping").getApiMapping;
export declare const getApiMappingOutput: typeof import("./getApiMapping").getApiMappingOutput;
export { GetAuthorizerArgs, GetAuthorizerResult, GetAuthorizerOutputArgs } from "./getAuthorizer";
export declare const getAuthorizer: typeof import("./getAuthorizer").getAuthorizer;
export declare const getAuthorizerOutput: typeof import("./getAuthorizer").getAuthorizerOutput;
export { GetDeploymentArgs, GetDeploymentResult, GetDeploymentOutputArgs } from "./getDeployment";
export declare const getDeployment: typeof import("./getDeployment").getDeployment;
export declare const getDeploymentOutput: typeof import("./getDeployment").getDeploymentOutput;
export { GetDomainNameArgs, GetDomainNameResult, GetDomainNameOutputArgs } from "./getDomainName";
export declare const getDomainName: typeof import("./getDomainName").getDomainName;
export declare const getDomainNameOutput: typeof import("./getDomainName").getDomainNameOutput;
export { GetIntegrationArgs, GetIntegrationResult, GetIntegrationOutputArgs } from "./getIntegration";
export declare const getIntegration: typeof import("./getIntegration").getIntegration;
export declare const getIntegrationOutput: typeof import("./getIntegration").getIntegrationOutput;
export { GetIntegrationResponseArgs, GetIntegrationResponseResult, GetIntegrationResponseOutputArgs } from "./getIntegrationResponse";
export declare const getIntegrationResponse: typeof import("./getIntegrationResponse").getIntegrationResponse;
export declare const getIntegrationResponseOutput: typeof import("./getIntegrationResponse").getIntegrationResponseOutput;
export { GetModelArgs, GetModelResult, GetModelOutputArgs } from "./getModel";
export declare const getModel: typeof import("./getModel").getModel;
export declare const getModelOutput: typeof import("./getModel").getModelOutput;
export { GetRouteArgs, GetRouteResult, GetRouteOutputArgs } from "./getRoute";
export declare const getRoute: typeof import("./getRoute").getRoute;
export declare const getRouteOutput: typeof import("./getRoute").getRouteOutput;
export { GetRouteResponseArgs, GetRouteResponseResult, GetRouteResponseOutputArgs } from "./getRouteResponse";
export declare const getRouteResponse: typeof import("./getRouteResponse").getRouteResponse;
export declare const getRouteResponseOutput: typeof import("./getRouteResponse").getRouteResponseOutput;
export { GetStageArgs, GetStageResult, GetStageOutputArgs } from "./getStage";
export declare const getStage: typeof import("./getStage").getStage;
export declare const getStageOutput: typeof import("./getStage").getStageOutput;
export { GetVpcLinkArgs, GetVpcLinkResult, GetVpcLinkOutputArgs } from "./getVpcLink";
export declare const getVpcLink: typeof import("./getVpcLink").getVpcLink;
export declare const getVpcLinkOutput: typeof import("./getVpcLink").getVpcLinkOutput;
export { IntegrationArgs } from "./integration";
export declare type Integration = import("./integration").Integration;
export declare const Integration: typeof import("./integration").Integration;
export { IntegrationResponseArgs } from "./integrationResponse";
export declare type IntegrationResponse = import("./integrationResponse").IntegrationResponse;
export declare const IntegrationResponse: typeof import("./integrationResponse").IntegrationResponse;
export { ModelArgs } from "./model";
export declare type Model = import("./model").Model;
export declare const Model: typeof import("./model").Model;
export { RouteArgs } from "./route";
export declare type Route = import("./route").Route;
export declare const Route: typeof import("./route").Route;
export { RouteResponseArgs } from "./routeResponse";
export declare type RouteResponse = import("./routeResponse").RouteResponse;
export declare const RouteResponse: typeof import("./routeResponse").RouteResponse;
export { StageArgs } from "./stage";
export declare type Stage = import("./stage").Stage;
export declare const Stage: typeof import("./stage").Stage;
export { VpcLinkArgs } from "./vpcLink";
export declare type VpcLink = import("./vpcLink").VpcLink;
export declare const VpcLink: typeof import("./vpcLink").VpcLink;
