import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::FSx::DataRepositoryAssociation
 */
export declare class DataRepositoryAssociation extends pulumi.CustomResource {
    /**
     * Get an existing DataRepositoryAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataRepositoryAssociation;
    /**
     * Returns true if the given object is an instance of DataRepositoryAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DataRepositoryAssociation;
    /**
     * The system-generated, unique ID of the data repository association.
     */
    readonly associationId: pulumi.Output<string>;
    /**
     * A boolean flag indicating whether an import data repository task to import metadata should run after the data repository association is created. The task runs if this flag is set to true.
     */
    readonly batchImportMetaDataOnCreate: pulumi.Output<boolean | undefined>;
    /**
     * The path to the Amazon S3 data repository that will be linked to the file system. The path can be an S3 bucket or prefix in the format s3://myBucket/myPrefix/ . This path specifies where in the S3 data repository files will be imported from or exported to.
     */
    readonly dataRepositoryPath: pulumi.Output<string>;
    /**
     * The globally unique ID of the file system, assigned by Amazon FSx.
     */
    readonly fileSystemId: pulumi.Output<string>;
    /**
     * This path specifies where in your file system files will be exported from or imported to. This file system directory can be linked to only one Amazon S3 bucket, and no other S3 bucket can be linked to the directory.
     */
    readonly fileSystemPath: pulumi.Output<string>;
    /**
     * For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. The maximum number of disks that a single file can be striped across is limited by the total number of disks that make up the file system.
     */
    readonly importedFileChunkSize: pulumi.Output<number | undefined>;
    /**
     * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see Amazon Resource Names (ARNs) in the Amazon Web Services General Reference.
     */
    readonly resourceARN: pulumi.Output<string>;
    /**
     * The configuration for an Amazon S3 data repository linked to an Amazon FSx Lustre file system with a data repository association. The configuration defines which file events (new, changed, or deleted files or directories) are automatically imported from the linked data repository to the file system or automatically exported from the file system to the data repository.
     */
    readonly s3: pulumi.Output<outputs.fsx.DataRepositoryAssociationS3 | undefined>;
    /**
     * A list of Tag values, with a maximum of 50 elements.
     */
    readonly tags: pulumi.Output<outputs.fsx.DataRepositoryAssociationTag[] | undefined>;
    /**
     * Create a DataRepositoryAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataRepositoryAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DataRepositoryAssociation resource.
 */
export interface DataRepositoryAssociationArgs {
    /**
     * A boolean flag indicating whether an import data repository task to import metadata should run after the data repository association is created. The task runs if this flag is set to true.
     */
    batchImportMetaDataOnCreate?: pulumi.Input<boolean>;
    /**
     * The path to the Amazon S3 data repository that will be linked to the file system. The path can be an S3 bucket or prefix in the format s3://myBucket/myPrefix/ . This path specifies where in the S3 data repository files will be imported from or exported to.
     */
    dataRepositoryPath: pulumi.Input<string>;
    /**
     * The globally unique ID of the file system, assigned by Amazon FSx.
     */
    fileSystemId: pulumi.Input<string>;
    /**
     * This path specifies where in your file system files will be exported from or imported to. This file system directory can be linked to only one Amazon S3 bucket, and no other S3 bucket can be linked to the directory.
     */
    fileSystemPath: pulumi.Input<string>;
    /**
     * For files imported from a data repository, this value determines the stripe count and maximum amount of data per file (in MiB) stored on a single physical disk. The maximum number of disks that a single file can be striped across is limited by the total number of disks that make up the file system.
     */
    importedFileChunkSize?: pulumi.Input<number>;
    /**
     * The configuration for an Amazon S3 data repository linked to an Amazon FSx Lustre file system with a data repository association. The configuration defines which file events (new, changed, or deleted files or directories) are automatically imported from the linked data repository to the file system or automatically exported from the file system to the data repository.
     */
    s3?: pulumi.Input<inputs.fsx.DataRepositoryAssociationS3Args>;
    /**
     * A list of Tag values, with a maximum of 50 elements.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.fsx.DataRepositoryAssociationTagArgs>[]>;
}
