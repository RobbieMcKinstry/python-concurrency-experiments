"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Volume = exports.StorageVirtualMachine = exports.Snapshot = exports.getVolumeOutput = exports.getVolume = exports.getStorageVirtualMachineOutput = exports.getStorageVirtualMachine = exports.getSnapshotOutput = exports.getSnapshot = exports.getFileSystemOutput = exports.getFileSystem = exports.getDataRepositoryAssociationOutput = exports.getDataRepositoryAssociation = exports.FileSystem = exports.DataRepositoryAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.DataRepositoryAssociation = null;
utilities.lazyLoad(exports, ["DataRepositoryAssociation"], () => require("./dataRepositoryAssociation"));
exports.FileSystem = null;
utilities.lazyLoad(exports, ["FileSystem"], () => require("./fileSystem"));
exports.getDataRepositoryAssociation = null;
exports.getDataRepositoryAssociationOutput = null;
utilities.lazyLoad(exports, ["getDataRepositoryAssociation", "getDataRepositoryAssociationOutput"], () => require("./getDataRepositoryAssociation"));
exports.getFileSystem = null;
exports.getFileSystemOutput = null;
utilities.lazyLoad(exports, ["getFileSystem", "getFileSystemOutput"], () => require("./getFileSystem"));
exports.getSnapshot = null;
exports.getSnapshotOutput = null;
utilities.lazyLoad(exports, ["getSnapshot", "getSnapshotOutput"], () => require("./getSnapshot"));
exports.getStorageVirtualMachine = null;
exports.getStorageVirtualMachineOutput = null;
utilities.lazyLoad(exports, ["getStorageVirtualMachine", "getStorageVirtualMachineOutput"], () => require("./getStorageVirtualMachine"));
exports.getVolume = null;
exports.getVolumeOutput = null;
utilities.lazyLoad(exports, ["getVolume", "getVolumeOutput"], () => require("./getVolume"));
exports.Snapshot = null;
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));
exports.StorageVirtualMachine = null;
utilities.lazyLoad(exports, ["StorageVirtualMachine"], () => require("./storageVirtualMachine"));
exports.Volume = null;
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));
// Export enums:
__exportStar(require("../types/enums/fsx"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:fsx:DataRepositoryAssociation":
                return new exports.DataRepositoryAssociation(name, undefined, { urn });
            case "aws-native:fsx:FileSystem":
                return new exports.FileSystem(name, undefined, { urn });
            case "aws-native:fsx:Snapshot":
                return new exports.Snapshot(name, undefined, { urn });
            case "aws-native:fsx:StorageVirtualMachine":
                return new exports.StorageVirtualMachine(name, undefined, { urn });
            case "aws-native:fsx:Volume":
                return new exports.Volume(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "fsx", _module);
//# sourceMappingURL=index.js.map