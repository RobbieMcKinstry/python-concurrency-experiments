import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::FSx::Volume
 *
 * @deprecated Volume is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Volume extends pulumi.CustomResource {
    /**
     * Get an existing Volume resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Volume;
    /**
     * Returns true if the given object is an instance of Volume.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Volume;
    readonly backupId: pulumi.Output<string | undefined>;
    readonly name: pulumi.Output<string>;
    readonly ontapConfiguration: pulumi.Output<outputs.fsx.VolumeOntapConfiguration | undefined>;
    readonly openZFSConfiguration: pulumi.Output<outputs.fsx.VolumeOpenZFSConfiguration | undefined>;
    readonly resourceARN: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.fsx.VolumeTag[] | undefined>;
    readonly uUID: pulumi.Output<string>;
    readonly volumeId: pulumi.Output<string>;
    readonly volumeType: pulumi.Output<string | undefined>;
    /**
     * Create a Volume resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Volume is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args?: VolumeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Volume resource.
 */
export interface VolumeArgs {
    backupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    ontapConfiguration?: pulumi.Input<inputs.fsx.VolumeOntapConfigurationArgs>;
    openZFSConfiguration?: pulumi.Input<inputs.fsx.VolumeOpenZFSConfigurationArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.fsx.VolumeTagArgs>[]>;
    volumeType?: pulumi.Input<string>;
}
