import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Elasticsearch::Domain
 */
export declare function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult>;
export interface GetDomainArgs {
    id: string;
}
export interface GetDomainResult {
    readonly accessPolicies?: any;
    readonly advancedOptions?: any;
    readonly advancedSecurityOptions?: outputs.elasticsearch.DomainAdvancedSecurityOptionsInput;
    readonly arn?: string;
    readonly cognitoOptions?: outputs.elasticsearch.DomainCognitoOptions;
    readonly domainArn?: string;
    readonly domainEndpoint?: string;
    readonly domainEndpointOptions?: outputs.elasticsearch.DomainEndpointOptions;
    readonly eBSOptions?: outputs.elasticsearch.DomainEBSOptions;
    readonly elasticsearchClusterConfig?: outputs.elasticsearch.DomainElasticsearchClusterConfig;
    readonly elasticsearchVersion?: string;
    readonly encryptionAtRestOptions?: outputs.elasticsearch.DomainEncryptionAtRestOptions;
    readonly id?: string;
    readonly logPublishingOptions?: any;
    readonly nodeToNodeEncryptionOptions?: outputs.elasticsearch.DomainNodeToNodeEncryptionOptions;
    readonly snapshotOptions?: outputs.elasticsearch.DomainSnapshotOptions;
    readonly tags?: outputs.elasticsearch.DomainTag[];
    readonly vPCOptions?: outputs.elasticsearch.DomainVPCOptions;
}
export declare function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult>;
export interface GetDomainOutputArgs {
    id: pulumi.Input<string>;
}
