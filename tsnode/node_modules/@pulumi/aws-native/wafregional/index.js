"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.XssMatchSet = exports.WebACLAssociation = exports.WebACL = exports.SqlInjectionMatchSet = exports.SizeConstraintSet = exports.Rule = exports.RegexPatternSet = exports.RateBasedRule = exports.IPSet = exports.getXssMatchSetOutput = exports.getXssMatchSet = exports.getWebACLAssociationOutput = exports.getWebACLAssociation = exports.getWebACLOutput = exports.getWebACL = exports.getSqlInjectionMatchSetOutput = exports.getSqlInjectionMatchSet = exports.getSizeConstraintSetOutput = exports.getSizeConstraintSet = exports.getRuleOutput = exports.getRule = exports.getRegexPatternSetOutput = exports.getRegexPatternSet = exports.getRateBasedRuleOutput = exports.getRateBasedRule = exports.getIPSetOutput = exports.getIPSet = exports.getGeoMatchSetOutput = exports.getGeoMatchSet = exports.getByteMatchSetOutput = exports.getByteMatchSet = exports.GeoMatchSet = exports.ByteMatchSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ByteMatchSet = null;
utilities.lazyLoad(exports, ["ByteMatchSet"], () => require("./byteMatchSet"));
exports.GeoMatchSet = null;
utilities.lazyLoad(exports, ["GeoMatchSet"], () => require("./geoMatchSet"));
exports.getByteMatchSet = null;
exports.getByteMatchSetOutput = null;
utilities.lazyLoad(exports, ["getByteMatchSet", "getByteMatchSetOutput"], () => require("./getByteMatchSet"));
exports.getGeoMatchSet = null;
exports.getGeoMatchSetOutput = null;
utilities.lazyLoad(exports, ["getGeoMatchSet", "getGeoMatchSetOutput"], () => require("./getGeoMatchSet"));
exports.getIPSet = null;
exports.getIPSetOutput = null;
utilities.lazyLoad(exports, ["getIPSet", "getIPSetOutput"], () => require("./getIPSet"));
exports.getRateBasedRule = null;
exports.getRateBasedRuleOutput = null;
utilities.lazyLoad(exports, ["getRateBasedRule", "getRateBasedRuleOutput"], () => require("./getRateBasedRule"));
exports.getRegexPatternSet = null;
exports.getRegexPatternSetOutput = null;
utilities.lazyLoad(exports, ["getRegexPatternSet", "getRegexPatternSetOutput"], () => require("./getRegexPatternSet"));
exports.getRule = null;
exports.getRuleOutput = null;
utilities.lazyLoad(exports, ["getRule", "getRuleOutput"], () => require("./getRule"));
exports.getSizeConstraintSet = null;
exports.getSizeConstraintSetOutput = null;
utilities.lazyLoad(exports, ["getSizeConstraintSet", "getSizeConstraintSetOutput"], () => require("./getSizeConstraintSet"));
exports.getSqlInjectionMatchSet = null;
exports.getSqlInjectionMatchSetOutput = null;
utilities.lazyLoad(exports, ["getSqlInjectionMatchSet", "getSqlInjectionMatchSetOutput"], () => require("./getSqlInjectionMatchSet"));
exports.getWebACL = null;
exports.getWebACLOutput = null;
utilities.lazyLoad(exports, ["getWebACL", "getWebACLOutput"], () => require("./getWebACL"));
exports.getWebACLAssociation = null;
exports.getWebACLAssociationOutput = null;
utilities.lazyLoad(exports, ["getWebACLAssociation", "getWebACLAssociationOutput"], () => require("./getWebACLAssociation"));
exports.getXssMatchSet = null;
exports.getXssMatchSetOutput = null;
utilities.lazyLoad(exports, ["getXssMatchSet", "getXssMatchSetOutput"], () => require("./getXssMatchSet"));
exports.IPSet = null;
utilities.lazyLoad(exports, ["IPSet"], () => require("./ipset"));
exports.RateBasedRule = null;
utilities.lazyLoad(exports, ["RateBasedRule"], () => require("./rateBasedRule"));
exports.RegexPatternSet = null;
utilities.lazyLoad(exports, ["RegexPatternSet"], () => require("./regexPatternSet"));
exports.Rule = null;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));
exports.SizeConstraintSet = null;
utilities.lazyLoad(exports, ["SizeConstraintSet"], () => require("./sizeConstraintSet"));
exports.SqlInjectionMatchSet = null;
utilities.lazyLoad(exports, ["SqlInjectionMatchSet"], () => require("./sqlInjectionMatchSet"));
exports.WebACL = null;
utilities.lazyLoad(exports, ["WebACL"], () => require("./webACL"));
exports.WebACLAssociation = null;
utilities.lazyLoad(exports, ["WebACLAssociation"], () => require("./webACLAssociation"));
exports.XssMatchSet = null;
utilities.lazyLoad(exports, ["XssMatchSet"], () => require("./xssMatchSet"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:wafregional:ByteMatchSet":
                return new exports.ByteMatchSet(name, undefined, { urn });
            case "aws-native:wafregional:GeoMatchSet":
                return new exports.GeoMatchSet(name, undefined, { urn });
            case "aws-native:wafregional:IPSet":
                return new exports.IPSet(name, undefined, { urn });
            case "aws-native:wafregional:RateBasedRule":
                return new exports.RateBasedRule(name, undefined, { urn });
            case "aws-native:wafregional:RegexPatternSet":
                return new exports.RegexPatternSet(name, undefined, { urn });
            case "aws-native:wafregional:Rule":
                return new exports.Rule(name, undefined, { urn });
            case "aws-native:wafregional:SizeConstraintSet":
                return new exports.SizeConstraintSet(name, undefined, { urn });
            case "aws-native:wafregional:SqlInjectionMatchSet":
                return new exports.SqlInjectionMatchSet(name, undefined, { urn });
            case "aws-native:wafregional:WebACL":
                return new exports.WebACL(name, undefined, { urn });
            case "aws-native:wafregional:WebACLAssociation":
                return new exports.WebACLAssociation(name, undefined, { urn });
            case "aws-native:wafregional:XssMatchSet":
                return new exports.XssMatchSet(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "wafregional", _module);
//# sourceMappingURL=index.js.map