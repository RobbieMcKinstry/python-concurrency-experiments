import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::Logs::LogGroup
 */
export declare function getLogGroup(args: GetLogGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetLogGroupResult>;
export interface GetLogGroupArgs {
    /**
     * The name of the log group. If you don't specify a name, AWS CloudFormation generates a unique ID for the log group.
     */
    logGroupName: string;
}
export interface GetLogGroupResult {
    /**
     * The CloudWatch log group ARN.
     */
    readonly arn?: string;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    readonly kmsKeyId?: string;
    /**
     * The number of days to retain the log events in the specified log group. Possible values are: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, and 3653.
     */
    readonly retentionInDays?: number;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.logs.LogGroupTag[];
}
export declare function getLogGroupOutput(args: GetLogGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLogGroupResult>;
export interface GetLogGroupOutputArgs {
    /**
     * The name of the log group. If you don't specify a name, AWS CloudFormation generates a unique ID for the log group.
     */
    logGroupName: pulumi.Input<string>;
}
