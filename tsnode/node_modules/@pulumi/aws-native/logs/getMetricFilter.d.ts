import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Specifies a metric filter that describes how CloudWatch Logs extracts information from logs and transforms it into Amazon CloudWatch metrics.
 */
export declare function getMetricFilter(args: GetMetricFilterArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricFilterResult>;
export interface GetMetricFilterArgs {
    /**
     * A name for the metric filter.
     */
    filterName: string;
    /**
     * Existing log group that you want to associate with this filter.
     */
    logGroupName: string;
}
export interface GetMetricFilterResult {
    /**
     * Pattern that Logs follows to interpret each entry in a log.
     */
    readonly filterPattern?: string;
    /**
     * A collection of information that defines how metric data gets emitted.
     */
    readonly metricTransformations?: outputs.logs.MetricFilterMetricTransformation[];
}
export declare function getMetricFilterOutput(args: GetMetricFilterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetricFilterResult>;
export interface GetMetricFilterOutputArgs {
    /**
     * A name for the metric filter.
     */
    filterName: pulumi.Input<string>;
    /**
     * Existing log group that you want to associate with this filter.
     */
    logGroupName: pulumi.Input<string>;
}
