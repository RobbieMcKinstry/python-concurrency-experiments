"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionFilter = exports.ResourcePolicy = exports.QueryDefinition = exports.MetricFilter = exports.LogStream = exports.LogGroup = exports.getSubscriptionFilterOutput = exports.getSubscriptionFilter = exports.getResourcePolicyOutput = exports.getResourcePolicy = exports.getQueryDefinitionOutput = exports.getQueryDefinition = exports.getMetricFilterOutput = exports.getMetricFilter = exports.getLogGroupOutput = exports.getLogGroup = exports.getDestinationOutput = exports.getDestination = exports.Destination = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Destination = null;
utilities.lazyLoad(exports, ["Destination"], () => require("./destination"));
exports.getDestination = null;
exports.getDestinationOutput = null;
utilities.lazyLoad(exports, ["getDestination", "getDestinationOutput"], () => require("./getDestination"));
exports.getLogGroup = null;
exports.getLogGroupOutput = null;
utilities.lazyLoad(exports, ["getLogGroup", "getLogGroupOutput"], () => require("./getLogGroup"));
exports.getMetricFilter = null;
exports.getMetricFilterOutput = null;
utilities.lazyLoad(exports, ["getMetricFilter", "getMetricFilterOutput"], () => require("./getMetricFilter"));
exports.getQueryDefinition = null;
exports.getQueryDefinitionOutput = null;
utilities.lazyLoad(exports, ["getQueryDefinition", "getQueryDefinitionOutput"], () => require("./getQueryDefinition"));
exports.getResourcePolicy = null;
exports.getResourcePolicyOutput = null;
utilities.lazyLoad(exports, ["getResourcePolicy", "getResourcePolicyOutput"], () => require("./getResourcePolicy"));
exports.getSubscriptionFilter = null;
exports.getSubscriptionFilterOutput = null;
utilities.lazyLoad(exports, ["getSubscriptionFilter", "getSubscriptionFilterOutput"], () => require("./getSubscriptionFilter"));
exports.LogGroup = null;
utilities.lazyLoad(exports, ["LogGroup"], () => require("./logGroup"));
exports.LogStream = null;
utilities.lazyLoad(exports, ["LogStream"], () => require("./logStream"));
exports.MetricFilter = null;
utilities.lazyLoad(exports, ["MetricFilter"], () => require("./metricFilter"));
exports.QueryDefinition = null;
utilities.lazyLoad(exports, ["QueryDefinition"], () => require("./queryDefinition"));
exports.ResourcePolicy = null;
utilities.lazyLoad(exports, ["ResourcePolicy"], () => require("./resourcePolicy"));
exports.SubscriptionFilter = null;
utilities.lazyLoad(exports, ["SubscriptionFilter"], () => require("./subscriptionFilter"));
// Export enums:
__exportStar(require("../types/enums/logs"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:logs:Destination":
                return new exports.Destination(name, undefined, { urn });
            case "aws-native:logs:LogGroup":
                return new exports.LogGroup(name, undefined, { urn });
            case "aws-native:logs:LogStream":
                return new exports.LogStream(name, undefined, { urn });
            case "aws-native:logs:MetricFilter":
                return new exports.MetricFilter(name, undefined, { urn });
            case "aws-native:logs:QueryDefinition":
                return new exports.QueryDefinition(name, undefined, { urn });
            case "aws-native:logs:ResourcePolicy":
                return new exports.ResourcePolicy(name, undefined, { urn });
            case "aws-native:logs:SubscriptionFilter":
                return new exports.SubscriptionFilter(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "logs", _module);
//# sourceMappingURL=index.js.map