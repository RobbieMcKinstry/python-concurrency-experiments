"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Alarm = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::CloudWatch::Alarm
 *
 * @deprecated Alarm is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
class Alarm extends pulumi.CustomResource {
    /**
     * Create a Alarm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Alarm is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name, args, opts) {
        pulumi.log.warn("Alarm is deprecated: Alarm is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.comparisonOperator === undefined) && !opts.urn) {
                throw new Error("Missing required property 'comparisonOperator'");
            }
            if ((!args || args.evaluationPeriods === undefined) && !opts.urn) {
                throw new Error("Missing required property 'evaluationPeriods'");
            }
            resourceInputs["actionsEnabled"] = args ? args.actionsEnabled : undefined;
            resourceInputs["alarmActions"] = args ? args.alarmActions : undefined;
            resourceInputs["alarmDescription"] = args ? args.alarmDescription : undefined;
            resourceInputs["alarmName"] = args ? args.alarmName : undefined;
            resourceInputs["comparisonOperator"] = args ? args.comparisonOperator : undefined;
            resourceInputs["datapointsToAlarm"] = args ? args.datapointsToAlarm : undefined;
            resourceInputs["dimensions"] = args ? args.dimensions : undefined;
            resourceInputs["evaluateLowSampleCountPercentile"] = args ? args.evaluateLowSampleCountPercentile : undefined;
            resourceInputs["evaluationPeriods"] = args ? args.evaluationPeriods : undefined;
            resourceInputs["extendedStatistic"] = args ? args.extendedStatistic : undefined;
            resourceInputs["insufficientDataActions"] = args ? args.insufficientDataActions : undefined;
            resourceInputs["metricName"] = args ? args.metricName : undefined;
            resourceInputs["metrics"] = args ? args.metrics : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["oKActions"] = args ? args.oKActions : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["statistic"] = args ? args.statistic : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["thresholdMetricId"] = args ? args.thresholdMetricId : undefined;
            resourceInputs["treatMissingData"] = args ? args.treatMissingData : undefined;
            resourceInputs["unit"] = args ? args.unit : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        else {
            resourceInputs["actionsEnabled"] = undefined /*out*/;
            resourceInputs["alarmActions"] = undefined /*out*/;
            resourceInputs["alarmDescription"] = undefined /*out*/;
            resourceInputs["alarmName"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["comparisonOperator"] = undefined /*out*/;
            resourceInputs["datapointsToAlarm"] = undefined /*out*/;
            resourceInputs["dimensions"] = undefined /*out*/;
            resourceInputs["evaluateLowSampleCountPercentile"] = undefined /*out*/;
            resourceInputs["evaluationPeriods"] = undefined /*out*/;
            resourceInputs["extendedStatistic"] = undefined /*out*/;
            resourceInputs["insufficientDataActions"] = undefined /*out*/;
            resourceInputs["metricName"] = undefined /*out*/;
            resourceInputs["metrics"] = undefined /*out*/;
            resourceInputs["namespace"] = undefined /*out*/;
            resourceInputs["oKActions"] = undefined /*out*/;
            resourceInputs["period"] = undefined /*out*/;
            resourceInputs["statistic"] = undefined /*out*/;
            resourceInputs["threshold"] = undefined /*out*/;
            resourceInputs["thresholdMetricId"] = undefined /*out*/;
            resourceInputs["treatMissingData"] = undefined /*out*/;
            resourceInputs["unit"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Alarm.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing Alarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        pulumi.log.warn("Alarm is deprecated: Alarm is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.");
        return new Alarm(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Alarm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Alarm.__pulumiType;
    }
}
exports.Alarm = Alarm;
/** @internal */
Alarm.__pulumiType = 'aws-native:cloudwatch:Alarm';
//# sourceMappingURL=alarm.js.map