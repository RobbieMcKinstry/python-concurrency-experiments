import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Create and manage partner account
 */
export declare function getPartnerAccount(args: GetPartnerAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetPartnerAccountResult>;
export interface GetPartnerAccountArgs {
    /**
     * The partner account ID to disassociate from the AWS account
     */
    partnerAccountId: string;
}
export interface GetPartnerAccountResult {
    /**
     * Whether the partner account is linked to the AWS account.
     */
    readonly accountLinked?: boolean;
    /**
     * PartnerAccount arn. Returned after successful create.
     */
    readonly arn?: string;
    /**
     * The fingerprint of the Sidewalk application server private key.
     */
    readonly fingerprint?: string;
    /**
     * The partner type
     */
    readonly partnerType?: enums.iotwireless.PartnerAccountPartnerType;
    /**
     * The Sidewalk account credentials.
     */
    readonly sidewalk?: outputs.iotwireless.PartnerAccountSidewalkAccountInfo;
    /**
     * The Sidewalk account credentials.
     */
    readonly sidewalkResponse?: outputs.iotwireless.PartnerAccountSidewalkAccountInfoWithFingerprint;
    /**
     * The Sidewalk account credentials.
     */
    readonly sidewalkUpdate?: outputs.iotwireless.PartnerAccountSidewalkUpdateAccount;
    /**
     * A list of key-value pairs that contain metadata for the destination.
     */
    readonly tags?: outputs.iotwireless.PartnerAccountTag[];
}
export declare function getPartnerAccountOutput(args: GetPartnerAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPartnerAccountResult>;
export interface GetPartnerAccountOutputArgs {
    /**
     * The partner account ID to disassociate from the AWS account
     */
    partnerAccountId: pulumi.Input<string>;
}
