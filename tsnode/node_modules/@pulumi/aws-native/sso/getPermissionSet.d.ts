import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for SSO PermissionSet
 */
export declare function getPermissionSet(args: GetPermissionSetArgs, opts?: pulumi.InvokeOptions): Promise<GetPermissionSetResult>;
export interface GetPermissionSetArgs {
    /**
     * The sso instance arn that the permission set is owned.
     */
    instanceArn: string;
    /**
     * The permission set that the policy will be attached to
     */
    permissionSetArn: string;
}
export interface GetPermissionSetResult {
    readonly customerManagedPolicyReferences?: outputs.sso.PermissionSetCustomerManagedPolicyReference[];
    /**
     * The permission set description.
     */
    readonly description?: string;
    /**
     * The inline policy to put in permission set.
     */
    readonly inlinePolicy?: any;
    readonly managedPolicies?: string[];
    /**
     * The permission set that the policy will be attached to
     */
    readonly permissionSetArn?: string;
    readonly permissionsBoundary?: outputs.sso.PermissionSetPermissionsBoundary;
    /**
     * The relay state URL that redirect links to any service in the AWS Management Console.
     */
    readonly relayStateType?: string;
    /**
     * The length of time that a user can be signed in to an AWS account.
     */
    readonly sessionDuration?: string;
    readonly tags?: outputs.sso.PermissionSetTag[];
}
export declare function getPermissionSetOutput(args: GetPermissionSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPermissionSetResult>;
export interface GetPermissionSetOutputArgs {
    /**
     * The sso instance arn that the permission set is owned.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The permission set that the policy will be attached to
     */
    permissionSetArn: pulumi.Input<string>;
}
