"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workflow = exports.Trigger = exports.Table = exports.SecurityConfiguration = exports.SchemaVersionMetadata = exports.SchemaVersion = exports.Schema = exports.Registry = exports.Partition = exports.MLTransform = exports.Job = exports.getWorkflowOutput = exports.getWorkflow = exports.getTriggerOutput = exports.getTrigger = exports.getTableOutput = exports.getTable = exports.getSecurityConfigurationOutput = exports.getSecurityConfiguration = exports.getSchemaVersionOutput = exports.getSchemaVersion = exports.getSchemaOutput = exports.getSchema = exports.getRegistryOutput = exports.getRegistry = exports.getPartitionOutput = exports.getPartition = exports.getMLTransformOutput = exports.getMLTransform = exports.getJobOutput = exports.getJob = exports.getDevEndpointOutput = exports.getDevEndpoint = exports.getDatabaseOutput = exports.getDatabase = exports.getDataCatalogEncryptionSettingsOutput = exports.getDataCatalogEncryptionSettings = exports.getCrawlerOutput = exports.getCrawler = exports.getConnectionOutput = exports.getConnection = exports.getClassifierOutput = exports.getClassifier = exports.DevEndpoint = exports.Database = exports.DataCatalogEncryptionSettings = exports.Crawler = exports.Connection = exports.Classifier = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Classifier = null;
utilities.lazyLoad(exports, ["Classifier"], () => require("./classifier"));
exports.Connection = null;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));
exports.Crawler = null;
utilities.lazyLoad(exports, ["Crawler"], () => require("./crawler"));
exports.DataCatalogEncryptionSettings = null;
utilities.lazyLoad(exports, ["DataCatalogEncryptionSettings"], () => require("./dataCatalogEncryptionSettings"));
exports.Database = null;
utilities.lazyLoad(exports, ["Database"], () => require("./database"));
exports.DevEndpoint = null;
utilities.lazyLoad(exports, ["DevEndpoint"], () => require("./devEndpoint"));
exports.getClassifier = null;
exports.getClassifierOutput = null;
utilities.lazyLoad(exports, ["getClassifier", "getClassifierOutput"], () => require("./getClassifier"));
exports.getConnection = null;
exports.getConnectionOutput = null;
utilities.lazyLoad(exports, ["getConnection", "getConnectionOutput"], () => require("./getConnection"));
exports.getCrawler = null;
exports.getCrawlerOutput = null;
utilities.lazyLoad(exports, ["getCrawler", "getCrawlerOutput"], () => require("./getCrawler"));
exports.getDataCatalogEncryptionSettings = null;
exports.getDataCatalogEncryptionSettingsOutput = null;
utilities.lazyLoad(exports, ["getDataCatalogEncryptionSettings", "getDataCatalogEncryptionSettingsOutput"], () => require("./getDataCatalogEncryptionSettings"));
exports.getDatabase = null;
exports.getDatabaseOutput = null;
utilities.lazyLoad(exports, ["getDatabase", "getDatabaseOutput"], () => require("./getDatabase"));
exports.getDevEndpoint = null;
exports.getDevEndpointOutput = null;
utilities.lazyLoad(exports, ["getDevEndpoint", "getDevEndpointOutput"], () => require("./getDevEndpoint"));
exports.getJob = null;
exports.getJobOutput = null;
utilities.lazyLoad(exports, ["getJob", "getJobOutput"], () => require("./getJob"));
exports.getMLTransform = null;
exports.getMLTransformOutput = null;
utilities.lazyLoad(exports, ["getMLTransform", "getMLTransformOutput"], () => require("./getMLTransform"));
exports.getPartition = null;
exports.getPartitionOutput = null;
utilities.lazyLoad(exports, ["getPartition", "getPartitionOutput"], () => require("./getPartition"));
exports.getRegistry = null;
exports.getRegistryOutput = null;
utilities.lazyLoad(exports, ["getRegistry", "getRegistryOutput"], () => require("./getRegistry"));
exports.getSchema = null;
exports.getSchemaOutput = null;
utilities.lazyLoad(exports, ["getSchema", "getSchemaOutput"], () => require("./getSchema"));
exports.getSchemaVersion = null;
exports.getSchemaVersionOutput = null;
utilities.lazyLoad(exports, ["getSchemaVersion", "getSchemaVersionOutput"], () => require("./getSchemaVersion"));
exports.getSecurityConfiguration = null;
exports.getSecurityConfigurationOutput = null;
utilities.lazyLoad(exports, ["getSecurityConfiguration", "getSecurityConfigurationOutput"], () => require("./getSecurityConfiguration"));
exports.getTable = null;
exports.getTableOutput = null;
utilities.lazyLoad(exports, ["getTable", "getTableOutput"], () => require("./getTable"));
exports.getTrigger = null;
exports.getTriggerOutput = null;
utilities.lazyLoad(exports, ["getTrigger", "getTriggerOutput"], () => require("./getTrigger"));
exports.getWorkflow = null;
exports.getWorkflowOutput = null;
utilities.lazyLoad(exports, ["getWorkflow", "getWorkflowOutput"], () => require("./getWorkflow"));
exports.Job = null;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));
exports.MLTransform = null;
utilities.lazyLoad(exports, ["MLTransform"], () => require("./mltransform"));
exports.Partition = null;
utilities.lazyLoad(exports, ["Partition"], () => require("./partition"));
exports.Registry = null;
utilities.lazyLoad(exports, ["Registry"], () => require("./registry"));
exports.Schema = null;
utilities.lazyLoad(exports, ["Schema"], () => require("./schema"));
exports.SchemaVersion = null;
utilities.lazyLoad(exports, ["SchemaVersion"], () => require("./schemaVersion"));
exports.SchemaVersionMetadata = null;
utilities.lazyLoad(exports, ["SchemaVersionMetadata"], () => require("./schemaVersionMetadata"));
exports.SecurityConfiguration = null;
utilities.lazyLoad(exports, ["SecurityConfiguration"], () => require("./securityConfiguration"));
exports.Table = null;
utilities.lazyLoad(exports, ["Table"], () => require("./table"));
exports.Trigger = null;
utilities.lazyLoad(exports, ["Trigger"], () => require("./trigger"));
exports.Workflow = null;
utilities.lazyLoad(exports, ["Workflow"], () => require("./workflow"));
// Export enums:
__exportStar(require("../types/enums/glue"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:glue:Classifier":
                return new exports.Classifier(name, undefined, { urn });
            case "aws-native:glue:Connection":
                return new exports.Connection(name, undefined, { urn });
            case "aws-native:glue:Crawler":
                return new exports.Crawler(name, undefined, { urn });
            case "aws-native:glue:DataCatalogEncryptionSettings":
                return new exports.DataCatalogEncryptionSettings(name, undefined, { urn });
            case "aws-native:glue:Database":
                return new exports.Database(name, undefined, { urn });
            case "aws-native:glue:DevEndpoint":
                return new exports.DevEndpoint(name, undefined, { urn });
            case "aws-native:glue:Job":
                return new exports.Job(name, undefined, { urn });
            case "aws-native:glue:MLTransform":
                return new exports.MLTransform(name, undefined, { urn });
            case "aws-native:glue:Partition":
                return new exports.Partition(name, undefined, { urn });
            case "aws-native:glue:Registry":
                return new exports.Registry(name, undefined, { urn });
            case "aws-native:glue:Schema":
                return new exports.Schema(name, undefined, { urn });
            case "aws-native:glue:SchemaVersion":
                return new exports.SchemaVersion(name, undefined, { urn });
            case "aws-native:glue:SchemaVersionMetadata":
                return new exports.SchemaVersionMetadata(name, undefined, { urn });
            case "aws-native:glue:SecurityConfiguration":
                return new exports.SecurityConfiguration(name, undefined, { urn });
            case "aws-native:glue:Table":
                return new exports.Table(name, undefined, { urn });
            case "aws-native:glue:Trigger":
                return new exports.Trigger(name, undefined, { urn });
            case "aws-native:glue:Workflow":
                return new exports.Workflow(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "glue", _module);
//# sourceMappingURL=index.js.map