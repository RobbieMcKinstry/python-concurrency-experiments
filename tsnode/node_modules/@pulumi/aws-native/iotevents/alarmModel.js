"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AlarmModel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The AWS::IoTEvents::AlarmModel resource creates a alarm model. AWS IoT Events alarms help you monitor your data for changes. The data can be metrics that you measure for your equipment and processes. You can create alarms that send notifications when a threshold is breached. Alarms help you detect issues, streamline maintenance, and optimize performance of your equipment and processes.
 *
 * Alarms are instances of alarm models. The alarm model specifies what to detect, when to send notifications, who gets notified, and more. You can also specify one or more supported actions that occur when the alarm state changes. AWS IoT Events routes input attributes derived from your data to the appropriate alarms. If the data that you're monitoring is outside the specified range, the alarm is invoked. You can also acknowledge the alarms or set them to the snooze mode.
 */
class AlarmModel extends pulumi.CustomResource {
    /**
     * Create a AlarmModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.alarmRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alarmRule'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["alarmCapabilities"] = args ? args.alarmCapabilities : undefined;
            resourceInputs["alarmEventActions"] = args ? args.alarmEventActions : undefined;
            resourceInputs["alarmModelDescription"] = args ? args.alarmModelDescription : undefined;
            resourceInputs["alarmModelName"] = args ? args.alarmModelName : undefined;
            resourceInputs["alarmRule"] = args ? args.alarmRule : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        else {
            resourceInputs["alarmCapabilities"] = undefined /*out*/;
            resourceInputs["alarmEventActions"] = undefined /*out*/;
            resourceInputs["alarmModelDescription"] = undefined /*out*/;
            resourceInputs["alarmModelName"] = undefined /*out*/;
            resourceInputs["alarmRule"] = undefined /*out*/;
            resourceInputs["key"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["severity"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlarmModel.__pulumiType, name, resourceInputs, opts);
    }
    /**
     * Get an existing AlarmModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new AlarmModel(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AlarmModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlarmModel.__pulumiType;
    }
}
exports.AlarmModel = AlarmModel;
/** @internal */
AlarmModel.__pulumiType = 'aws-native:iotevents:AlarmModel';
//# sourceMappingURL=alarmModel.js.map