import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Transfer::Connector
 */
export declare function getConnector(args: GetConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectorResult>;
export interface GetConnectorArgs {
    /**
     * A unique identifier for the connector.
     */
    connectorId: string;
}
export interface GetConnectorResult {
    /**
     * Specifies the access role for the connector.
     */
    readonly accessRole?: string;
    /**
     * Specifies the unique Amazon Resource Name (ARN) for the workflow.
     */
    readonly arn?: string;
    /**
     * Configuration for an AS2 connector.
     */
    readonly as2Config?: outputs.transfer.As2ConfigProperties;
    /**
     * A unique identifier for the connector.
     */
    readonly connectorId?: string;
    /**
     * Specifies the logging role for the connector.
     */
    readonly loggingRole?: string;
    /**
     * Key-value pairs that can be used to group and search for workflows. Tags are metadata attached to workflows for any purpose.
     */
    readonly tags?: outputs.transfer.ConnectorTag[];
    /**
     * URL for Connector
     */
    readonly url?: string;
}
export declare function getConnectorOutput(args: GetConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConnectorResult>;
export interface GetConnectorOutputArgs {
    /**
     * A unique identifier for the connector.
     */
    connectorId: pulumi.Input<string>;
}
