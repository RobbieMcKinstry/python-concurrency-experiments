import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * A domain defined for 3rd party data source in Profile Service
 */
export declare function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult>;
export interface GetDomainArgs {
    /**
     * The unique name of the domain.
     */
    domainName: string;
}
export interface GetDomainResult {
    /**
     * The time of this integration got created
     */
    readonly createdAt?: string;
    /**
     * The URL of the SQS dead letter queue
     */
    readonly deadLetterQueueUrl?: string;
    /**
     * The default encryption key
     */
    readonly defaultEncryptionKey?: string;
    /**
     * The default number of days until the data within the domain expires.
     */
    readonly defaultExpirationDays?: number;
    /**
     * The time of this integration got last updated at
     */
    readonly lastUpdatedAt?: string;
    /**
     * The tags (keys and values) associated with the domain
     */
    readonly tags?: outputs.customerprofiles.DomainTag[];
}
export declare function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult>;
export interface GetDomainOutputArgs {
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
}
