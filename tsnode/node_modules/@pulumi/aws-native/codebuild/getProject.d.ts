import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::CodeBuild::Project
 */
export declare function getProject(args: GetProjectArgs, opts?: pulumi.InvokeOptions): Promise<GetProjectResult>;
export interface GetProjectArgs {
    id: string;
}
export interface GetProjectResult {
    readonly arn?: string;
    readonly artifacts?: outputs.codebuild.ProjectArtifacts;
    readonly badgeEnabled?: boolean;
    readonly buildBatchConfig?: outputs.codebuild.ProjectBuildBatchConfig;
    readonly cache?: outputs.codebuild.ProjectCache;
    readonly concurrentBuildLimit?: number;
    readonly description?: string;
    readonly encryptionKey?: string;
    readonly environment?: outputs.codebuild.ProjectEnvironment;
    readonly fileSystemLocations?: outputs.codebuild.ProjectFileSystemLocation[];
    readonly id?: string;
    readonly logsConfig?: outputs.codebuild.ProjectLogsConfig;
    readonly queuedTimeoutInMinutes?: number;
    readonly resourceAccessRole?: string;
    readonly secondaryArtifacts?: outputs.codebuild.ProjectArtifacts[];
    readonly secondarySourceVersions?: outputs.codebuild.ProjectSourceVersion[];
    readonly secondarySources?: outputs.codebuild.ProjectSource[];
    readonly serviceRole?: string;
    readonly source?: outputs.codebuild.ProjectSource;
    readonly sourceVersion?: string;
    readonly tags?: outputs.codebuild.ProjectTag[];
    readonly timeoutInMinutes?: number;
    readonly triggers?: outputs.codebuild.ProjectTriggers;
    readonly visibility?: string;
    readonly vpcConfig?: outputs.codebuild.ProjectVpcConfig;
}
export declare function getProjectOutput(args: GetProjectOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetProjectResult>;
export interface GetProjectOutputArgs {
    id: pulumi.Input<string>;
}
