import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::DMS::Endpoint
 */
export declare function getEndpoint(args: GetEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointResult>;
export interface GetEndpointArgs {
    id: string;
}
export interface GetEndpointResult {
    readonly certificateArn?: string;
    readonly databaseName?: string;
    readonly docDbSettings?: outputs.dms.EndpointDocDbSettings;
    readonly dynamoDbSettings?: outputs.dms.EndpointDynamoDbSettings;
    readonly elasticsearchSettings?: outputs.dms.EndpointElasticsearchSettings;
    readonly endpointIdentifier?: string;
    readonly endpointType?: string;
    readonly engineName?: string;
    readonly externalId?: string;
    readonly extraConnectionAttributes?: string;
    readonly gcpMySQLSettings?: outputs.dms.EndpointGcpMySQLSettings;
    readonly ibmDb2Settings?: outputs.dms.EndpointIbmDb2Settings;
    readonly id?: string;
    readonly kafkaSettings?: outputs.dms.EndpointKafkaSettings;
    readonly kinesisSettings?: outputs.dms.EndpointKinesisSettings;
    readonly microsoftSqlServerSettings?: outputs.dms.EndpointMicrosoftSqlServerSettings;
    readonly mongoDbSettings?: outputs.dms.EndpointMongoDbSettings;
    readonly mySqlSettings?: outputs.dms.EndpointMySqlSettings;
    readonly neptuneSettings?: outputs.dms.EndpointNeptuneSettings;
    readonly oracleSettings?: outputs.dms.EndpointOracleSettings;
    readonly password?: string;
    readonly port?: number;
    readonly postgreSqlSettings?: outputs.dms.EndpointPostgreSqlSettings;
    readonly redisSettings?: outputs.dms.EndpointRedisSettings;
    readonly redshiftSettings?: outputs.dms.EndpointRedshiftSettings;
    readonly s3Settings?: outputs.dms.EndpointS3Settings;
    readonly serverName?: string;
    readonly sslMode?: string;
    readonly sybaseSettings?: outputs.dms.EndpointSybaseSettings;
    readonly tags?: outputs.dms.EndpointTag[];
    readonly username?: string;
}
export declare function getEndpointOutput(args: GetEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEndpointResult>;
export interface GetEndpointOutputArgs {
    id: pulumi.Input<string>;
}
