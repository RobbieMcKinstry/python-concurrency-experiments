import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::RolesAnywhere::Profile Resource Type
 */
export declare class Profile extends pulumi.CustomResource {
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Profile;
    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Profile;
    readonly durationSeconds: pulumi.Output<number | undefined>;
    readonly enabled: pulumi.Output<boolean | undefined>;
    readonly managedPolicyArns: pulumi.Output<string[] | undefined>;
    readonly name: pulumi.Output<string | undefined>;
    readonly profileArn: pulumi.Output<string>;
    readonly profileId: pulumi.Output<string>;
    readonly requireInstanceProperties: pulumi.Output<boolean | undefined>;
    readonly roleArns: pulumi.Output<string[] | undefined>;
    readonly sessionPolicy: pulumi.Output<string | undefined>;
    readonly tags: pulumi.Output<outputs.rolesanywhere.ProfileTag[] | undefined>;
    /**
     * Create a Profile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Profile resource.
 */
export interface ProfileArgs {
    durationSeconds?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    managedPolicyArns?: pulumi.Input<pulumi.Input<string>[]>;
    name?: pulumi.Input<string>;
    requireInstanceProperties?: pulumi.Input<boolean>;
    roleArns?: pulumi.Input<pulumi.Input<string>[]>;
    sessionPolicy?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.rolesanywhere.ProfileTagArgs>[]>;
}
