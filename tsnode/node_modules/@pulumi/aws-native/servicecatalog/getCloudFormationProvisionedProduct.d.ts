import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
 */
export declare function getCloudFormationProvisionedProduct(args: GetCloudFormationProvisionedProductArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudFormationProvisionedProductResult>;
export interface GetCloudFormationProvisionedProductArgs {
    provisionedProductId: string;
}
export interface GetCloudFormationProvisionedProductResult {
    readonly acceptLanguage?: enums.servicecatalog.CloudFormationProvisionedProductAcceptLanguage;
    readonly cloudformationStackArn?: string;
    /**
     * List of key-value pair outputs.
     */
    readonly outputs?: any;
    readonly pathId?: string;
    readonly pathName?: string;
    readonly productId?: string;
    readonly productName?: string;
    readonly provisionedProductId?: string;
    readonly provisioningArtifactId?: string;
    readonly provisioningArtifactName?: string;
    readonly provisioningParameters?: outputs.servicecatalog.CloudFormationProvisionedProductProvisioningParameter[];
    readonly provisioningPreferences?: outputs.servicecatalog.CloudFormationProvisionedProductProvisioningPreferences;
    readonly recordId?: string;
    readonly tags?: outputs.servicecatalog.CloudFormationProvisionedProductTag[];
}
export declare function getCloudFormationProvisionedProductOutput(args: GetCloudFormationProvisionedProductOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudFormationProvisionedProductResult>;
export interface GetCloudFormationProvisionedProductOutputArgs {
    provisionedProductId: pulumi.Input<string>;
}
