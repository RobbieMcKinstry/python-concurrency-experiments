import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::RDS::DBProxy
 */
export declare function getDBProxy(args: GetDBProxyArgs, opts?: pulumi.InvokeOptions): Promise<GetDBProxyResult>;
export interface GetDBProxyArgs {
    /**
     * The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
     */
    dBProxyName: string;
}
export interface GetDBProxyResult {
    /**
     * The authorization mechanism that the proxy uses.
     */
    readonly auth?: outputs.rds.DBProxyAuthFormat[];
    /**
     * The Amazon Resource Name (ARN) for the proxy.
     */
    readonly dBProxyArn?: string;
    /**
     * Whether the proxy includes detailed information about SQL statements in its logs.
     */
    readonly debugLogging?: boolean;
    /**
     * The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
     */
    readonly endpoint?: string;
    /**
     * The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
     */
    readonly idleClientTimeout?: number;
    /**
     * A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
     */
    readonly requireTLS?: boolean;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
     */
    readonly roleArn?: string;
    /**
     * An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
     */
    readonly tags?: outputs.rds.DBProxyTagFormat[];
    /**
     * VPC ID to associate with the new DB proxy.
     */
    readonly vpcId?: string;
    /**
     * VPC security group IDs to associate with the new proxy.
     */
    readonly vpcSecurityGroupIds?: string[];
}
export declare function getDBProxyOutput(args: GetDBProxyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDBProxyResult>;
export interface GetDBProxyOutputArgs {
    /**
     * The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
     */
    dBProxyName: pulumi.Input<string>;
}
