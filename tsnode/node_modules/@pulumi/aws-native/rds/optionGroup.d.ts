import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The AWS::RDS::OptionGroup resource creates an option group, to enable and configure features that are specific to a particular DB engine.
 */
export declare class OptionGroup extends pulumi.CustomResource {
    /**
     * Get an existing OptionGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OptionGroup;
    /**
     * Returns true if the given object is an instance of OptionGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OptionGroup;
    /**
     * Indicates the name of the engine that this option group can be applied to.
     */
    readonly engineName: pulumi.Output<string>;
    /**
     * Indicates the major engine version associated with this option group.
     */
    readonly majorEngineVersion: pulumi.Output<string>;
    /**
     * Indicates what options are available in the option group.
     */
    readonly optionConfigurations: pulumi.Output<outputs.rds.OptionGroupOptionConfiguration[] | undefined>;
    /**
     * Provides a description of the option group.
     */
    readonly optionGroupDescription: pulumi.Output<string>;
    /**
     * Specifies the name of the option group.
     */
    readonly optionGroupName: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.rds.OptionGroupTag[] | undefined>;
    /**
     * Create a OptionGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OptionGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a OptionGroup resource.
 */
export interface OptionGroupArgs {
    /**
     * Indicates the name of the engine that this option group can be applied to.
     */
    engineName: pulumi.Input<string>;
    /**
     * Indicates the major engine version associated with this option group.
     */
    majorEngineVersion: pulumi.Input<string>;
    /**
     * Indicates what options are available in the option group.
     */
    optionConfigurations?: pulumi.Input<pulumi.Input<inputs.rds.OptionGroupOptionConfigurationArgs>[]>;
    /**
     * Provides a description of the option group.
     */
    optionGroupDescription: pulumi.Input<string>;
    /**
     * Specifies the name of the option group.
     */
    optionGroupName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.rds.OptionGroupTagArgs>[]>;
}
