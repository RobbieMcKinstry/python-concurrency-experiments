export declare const ContactFlowModuleState: {
    readonly Active: "ACTIVE";
    readonly Archived: "ARCHIVED";
};
/**
 * The state of the contact flow module.
 */
export declare type ContactFlowModuleState = (typeof ContactFlowModuleState)[keyof typeof ContactFlowModuleState];
export declare const ContactFlowModuleStatus: {
    readonly Published: "PUBLISHED";
    readonly Saved: "SAVED";
};
/**
 * The status of the contact flow module.
 */
export declare type ContactFlowModuleStatus = (typeof ContactFlowModuleStatus)[keyof typeof ContactFlowModuleStatus];
export declare const ContactFlowState: {
    readonly Active: "ACTIVE";
    readonly Archived: "ARCHIVED";
};
/**
 * The state of the contact flow.
 */
export declare type ContactFlowState = (typeof ContactFlowState)[keyof typeof ContactFlowState];
export declare const ContactFlowType: {
    readonly ContactFlow: "CONTACT_FLOW";
    readonly CustomerQueue: "CUSTOMER_QUEUE";
    readonly CustomerHold: "CUSTOMER_HOLD";
    readonly CustomerWhisper: "CUSTOMER_WHISPER";
    readonly AgentHold: "AGENT_HOLD";
    readonly AgentWhisper: "AGENT_WHISPER";
    readonly OutboundWhisper: "OUTBOUND_WHISPER";
    readonly AgentTransfer: "AGENT_TRANSFER";
    readonly QueueTransfer: "QUEUE_TRANSFER";
};
/**
 * The type of the contact flow.
 */
export declare type ContactFlowType = (typeof ContactFlowType)[keyof typeof ContactFlowType];
export declare const HoursOfOperationConfigDay: {
    readonly Sunday: "SUNDAY";
    readonly Monday: "MONDAY";
    readonly Tuesday: "TUESDAY";
    readonly Wednesday: "WEDNESDAY";
    readonly Thursday: "THURSDAY";
    readonly Friday: "FRIDAY";
    readonly Saturday: "SATURDAY";
};
/**
 * The day that the hours of operation applies to.
 */
export declare type HoursOfOperationConfigDay = (typeof HoursOfOperationConfigDay)[keyof typeof HoursOfOperationConfigDay];
export declare const InstanceIdentityManagementType: {
    readonly Saml: "SAML";
    readonly ConnectManaged: "CONNECT_MANAGED";
    readonly ExistingDirectory: "EXISTING_DIRECTORY";
};
/**
 * Specifies the type of directory integration for new instance.
 */
export declare type InstanceIdentityManagementType = (typeof InstanceIdentityManagementType)[keyof typeof InstanceIdentityManagementType];
export declare const InstanceStatus: {
    readonly CreationInProgress: "CREATION_IN_PROGRESS";
    readonly CreationFailed: "CREATION_FAILED";
    readonly Active: "ACTIVE";
};
/**
 * Specifies the creation status of new instance.
 */
export declare type InstanceStatus = (typeof InstanceStatus)[keyof typeof InstanceStatus];
export declare const InstanceStorageConfigEncryptionType: {
    readonly Kms: "KMS";
};
/**
 * Specifies default encryption using AWS KMS-Managed Keys
 */
export declare type InstanceStorageConfigEncryptionType = (typeof InstanceStorageConfigEncryptionType)[keyof typeof InstanceStorageConfigEncryptionType];
export declare const InstanceStorageConfigInstanceStorageResourceType: {
    readonly ChatTranscripts: "CHAT_TRANSCRIPTS";
    readonly CallRecordings: "CALL_RECORDINGS";
    readonly ScheduledReports: "SCHEDULED_REPORTS";
    readonly MediaStreams: "MEDIA_STREAMS";
    readonly ContactTraceRecords: "CONTACT_TRACE_RECORDS";
    readonly AgentEvents: "AGENT_EVENTS";
};
/**
 * Specifies the type of storage resource available for the instance
 */
export declare type InstanceStorageConfigInstanceStorageResourceType = (typeof InstanceStorageConfigInstanceStorageResourceType)[keyof typeof InstanceStorageConfigInstanceStorageResourceType];
export declare const InstanceStorageConfigStorageType: {
    readonly S3: "S3";
    readonly KinesisVideoStream: "KINESIS_VIDEO_STREAM";
    readonly KinesisStream: "KINESIS_STREAM";
    readonly KinesisFirehose: "KINESIS_FIREHOSE";
};
/**
 * Specifies the storage type to be associated with the instance
 */
export declare type InstanceStorageConfigStorageType = (typeof InstanceStorageConfigStorageType)[keyof typeof InstanceStorageConfigStorageType];
export declare const QuickConnectType: {
    readonly PhoneNumber: "PHONE_NUMBER";
    readonly Queue: "QUEUE";
    readonly User: "USER";
};
/**
 * The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).
 */
export declare type QuickConnectType = (typeof QuickConnectType)[keyof typeof QuickConnectType];
export declare const TaskTemplateFieldType: {
    readonly Name: "NAME";
    readonly Description: "DESCRIPTION";
    readonly ScheduledTime: "SCHEDULED_TIME";
    readonly QuickConnect: "QUICK_CONNECT";
    readonly Url: "URL";
    readonly Number: "NUMBER";
    readonly Text: "TEXT";
    readonly TextArea: "TEXT_AREA";
    readonly DateTime: "DATE_TIME";
    readonly Boolean: "BOOLEAN";
    readonly SingleSelect: "SINGLE_SELECT";
    readonly Email: "EMAIL";
};
/**
 * The type of the task template's field
 */
export declare type TaskTemplateFieldType = (typeof TaskTemplateFieldType)[keyof typeof TaskTemplateFieldType];
export declare const TaskTemplateStatus: {
    readonly Active: "ACTIVE";
    readonly Inactive: "INACTIVE";
};
/**
 * The status of the task template
 */
export declare type TaskTemplateStatus = (typeof TaskTemplateStatus)[keyof typeof TaskTemplateStatus];
export declare const UserPhoneType: {
    readonly SoftPhone: "SOFT_PHONE";
    readonly DeskPhone: "DESK_PHONE";
};
/**
 * The phone type.
 */
export declare type UserPhoneType = (typeof UserPhoneType)[keyof typeof UserPhoneType];
