export declare const ComponentVersionLambdaEventSourceType: {
    readonly PubSub: "PUB_SUB";
    readonly IotCore: "IOT_CORE";
};
export declare type ComponentVersionLambdaEventSourceType = (typeof ComponentVersionLambdaEventSourceType)[keyof typeof ComponentVersionLambdaEventSourceType];
export declare const ComponentVersionLambdaExecutionParametersInputPayloadEncodingType: {
    readonly Json: "json";
    readonly Binary: "binary";
};
export declare type ComponentVersionLambdaExecutionParametersInputPayloadEncodingType = (typeof ComponentVersionLambdaExecutionParametersInputPayloadEncodingType)[keyof typeof ComponentVersionLambdaExecutionParametersInputPayloadEncodingType];
export declare const ComponentVersionLambdaFilesystemPermission: {
    readonly Ro: "ro";
    readonly Rw: "rw";
};
export declare type ComponentVersionLambdaFilesystemPermission = (typeof ComponentVersionLambdaFilesystemPermission)[keyof typeof ComponentVersionLambdaFilesystemPermission];
export declare const ComponentVersionLambdaLinuxProcessParamsIsolationMode: {
    readonly GreengrassContainer: "GreengrassContainer";
    readonly NoContainer: "NoContainer";
};
export declare type ComponentVersionLambdaLinuxProcessParamsIsolationMode = (typeof ComponentVersionLambdaLinuxProcessParamsIsolationMode)[keyof typeof ComponentVersionLambdaLinuxProcessParamsIsolationMode];
export declare const DeploymentComponentUpdatePolicyAction: {
    readonly NotifyComponents: "NOTIFY_COMPONENTS";
    readonly SkipNotifyComponents: "SKIP_NOTIFY_COMPONENTS";
};
export declare type DeploymentComponentUpdatePolicyAction = (typeof DeploymentComponentUpdatePolicyAction)[keyof typeof DeploymentComponentUpdatePolicyAction];
export declare const DeploymentIoTJobAbortCriteriaAction: {
    readonly Cancel: "CANCEL";
};
export declare type DeploymentIoTJobAbortCriteriaAction = (typeof DeploymentIoTJobAbortCriteriaAction)[keyof typeof DeploymentIoTJobAbortCriteriaAction];
export declare const DeploymentIoTJobAbortCriteriaFailureType: {
    readonly Failed: "FAILED";
    readonly Rejected: "REJECTED";
    readonly TimedOut: "TIMED_OUT";
    readonly All: "ALL";
};
export declare type DeploymentIoTJobAbortCriteriaFailureType = (typeof DeploymentIoTJobAbortCriteriaFailureType)[keyof typeof DeploymentIoTJobAbortCriteriaFailureType];
export declare const DeploymentPoliciesFailureHandlingPolicy: {
    readonly Rollback: "ROLLBACK";
    readonly DoNothing: "DO_NOTHING";
};
export declare type DeploymentPoliciesFailureHandlingPolicy = (typeof DeploymentPoliciesFailureHandlingPolicy)[keyof typeof DeploymentPoliciesFailureHandlingPolicy];
