import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.
 */
export declare function getMitigationAction(args: GetMitigationActionArgs, opts?: pulumi.InvokeOptions): Promise<GetMitigationActionResult>;
export interface GetMitigationActionArgs {
    /**
     * A unique identifier for the mitigation action.
     */
    actionName: string;
}
export interface GetMitigationActionResult {
    readonly actionParams?: outputs.iot.MitigationActionActionParams;
    readonly mitigationActionArn?: string;
    readonly mitigationActionId?: string;
    readonly roleArn?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.iot.MitigationActionTag[];
}
export declare function getMitigationActionOutput(args: GetMitigationActionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMitigationActionResult>;
export interface GetMitigationActionOutputArgs {
    /**
     * A unique identifier for the mitigation action.
     */
    actionName: pulumi.Input<string>;
}
