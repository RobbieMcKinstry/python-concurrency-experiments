import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Create and manage a Domain Configuration
 */
export declare function getDomainConfiguration(args: GetDomainConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainConfigurationResult>;
export interface GetDomainConfigurationArgs {
    domainConfigurationName: string;
}
export interface GetDomainConfigurationResult {
    readonly arn?: string;
    readonly authorizerConfig?: outputs.iot.DomainConfigurationAuthorizerConfig;
    readonly domainConfigurationStatus?: enums.iot.DomainConfigurationStatus;
    readonly domainType?: enums.iot.DomainConfigurationDomainType;
    readonly serverCertificates?: outputs.iot.DomainConfigurationServerCertificateSummary[];
    readonly tags?: outputs.iot.DomainConfigurationTag[];
}
export declare function getDomainConfigurationOutput(args: GetDomainConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainConfigurationResult>;
export interface GetDomainConfigurationOutputArgs {
    domainConfigurationName: pulumi.Input<string>;
}
