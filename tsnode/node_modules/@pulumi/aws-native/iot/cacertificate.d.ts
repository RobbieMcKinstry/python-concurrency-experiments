import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Registers a CA Certificate in IoT.
 */
export declare class CACertificate extends pulumi.CustomResource {
    /**
     * Get an existing CACertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CACertificate;
    /**
     * Returns true if the given object is an instance of CACertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CACertificate;
    readonly arn: pulumi.Output<string>;
    readonly autoRegistrationStatus: pulumi.Output<enums.iot.CACertificateAutoRegistrationStatus | undefined>;
    readonly cACertificatePem: pulumi.Output<string>;
    readonly certificateMode: pulumi.Output<enums.iot.CACertificateCertificateMode | undefined>;
    readonly registrationConfig: pulumi.Output<outputs.iot.CACertificateRegistrationConfig | undefined>;
    readonly removeAutoRegistration: pulumi.Output<boolean | undefined>;
    readonly status: pulumi.Output<enums.iot.CACertificateStatus>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.iot.CACertificateTag[] | undefined>;
    /**
     * The private key verification certificate.
     */
    readonly verificationCertificatePem: pulumi.Output<string | undefined>;
    /**
     * Create a CACertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CACertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CACertificate resource.
 */
export interface CACertificateArgs {
    autoRegistrationStatus?: pulumi.Input<enums.iot.CACertificateAutoRegistrationStatus>;
    cACertificatePem: pulumi.Input<string>;
    certificateMode?: pulumi.Input<enums.iot.CACertificateCertificateMode>;
    registrationConfig?: pulumi.Input<inputs.iot.CACertificateRegistrationConfigArgs>;
    removeAutoRegistration?: pulumi.Input<boolean>;
    status: pulumi.Input<enums.iot.CACertificateStatus>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.iot.CACertificateTagArgs>[]>;
    /**
     * The private key verification certificate.
     */
    verificationCertificatePem?: pulumi.Input<string>;
}
