import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::IoTFleetWise::Fleet Resource Type
 *
 * @deprecated Fleet is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
 */
export declare class Fleet extends pulumi.CustomResource {
    /**
     * Get an existing Fleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Fleet;
    /**
     * Returns true if the given object is an instance of Fleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Fleet;
    readonly arn: pulumi.Output<string>;
    readonly creationTime: pulumi.Output<string>;
    readonly description: pulumi.Output<string | undefined>;
    readonly lastModificationTime: pulumi.Output<string>;
    readonly signalCatalogArn: pulumi.Output<string>;
    readonly tags: pulumi.Output<outputs.iotfleetwise.FleetTag[] | undefined>;
    /**
     * Create a Fleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated Fleet is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible. */
    constructor(name: string, args: FleetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Fleet resource.
 */
export interface FleetArgs {
    description?: pulumi.Input<string>;
    signalCatalogArn: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.iotfleetwise.FleetTagArgs>[]>;
}
