"use strict";
// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualMFADevice = exports.UserToGroupAddition = exports.User = exports.ServiceLinkedRole = exports.ServerCertificate = exports.SAMLProvider = exports.Role = exports.Policy = exports.OIDCProvider = exports.ManagedPolicy = exports.InstanceProfile = exports.Group = exports.getVirtualMFADeviceOutput = exports.getVirtualMFADevice = exports.getUserToGroupAdditionOutput = exports.getUserToGroupAddition = exports.getUserOutput = exports.getUser = exports.getServiceLinkedRoleOutput = exports.getServiceLinkedRole = exports.getServerCertificateOutput = exports.getServerCertificate = exports.getSAMLProviderOutput = exports.getSAMLProvider = exports.getRoleOutput = exports.getRole = exports.getPolicyOutput = exports.getPolicy = exports.getOIDCProviderOutput = exports.getOIDCProvider = exports.getManagedPolicyOutput = exports.getManagedPolicy = exports.getInstanceProfileOutput = exports.getInstanceProfile = exports.getGroupOutput = exports.getGroup = exports.getAccessKeyOutput = exports.getAccessKey = exports.AccessKey = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessKey = null;
utilities.lazyLoad(exports, ["AccessKey"], () => require("./accessKey"));
exports.getAccessKey = null;
exports.getAccessKeyOutput = null;
utilities.lazyLoad(exports, ["getAccessKey", "getAccessKeyOutput"], () => require("./getAccessKey"));
exports.getGroup = null;
exports.getGroupOutput = null;
utilities.lazyLoad(exports, ["getGroup", "getGroupOutput"], () => require("./getGroup"));
exports.getInstanceProfile = null;
exports.getInstanceProfileOutput = null;
utilities.lazyLoad(exports, ["getInstanceProfile", "getInstanceProfileOutput"], () => require("./getInstanceProfile"));
exports.getManagedPolicy = null;
exports.getManagedPolicyOutput = null;
utilities.lazyLoad(exports, ["getManagedPolicy", "getManagedPolicyOutput"], () => require("./getManagedPolicy"));
exports.getOIDCProvider = null;
exports.getOIDCProviderOutput = null;
utilities.lazyLoad(exports, ["getOIDCProvider", "getOIDCProviderOutput"], () => require("./getOIDCProvider"));
exports.getPolicy = null;
exports.getPolicyOutput = null;
utilities.lazyLoad(exports, ["getPolicy", "getPolicyOutput"], () => require("./getPolicy"));
exports.getRole = null;
exports.getRoleOutput = null;
utilities.lazyLoad(exports, ["getRole", "getRoleOutput"], () => require("./getRole"));
exports.getSAMLProvider = null;
exports.getSAMLProviderOutput = null;
utilities.lazyLoad(exports, ["getSAMLProvider", "getSAMLProviderOutput"], () => require("./getSAMLProvider"));
exports.getServerCertificate = null;
exports.getServerCertificateOutput = null;
utilities.lazyLoad(exports, ["getServerCertificate", "getServerCertificateOutput"], () => require("./getServerCertificate"));
exports.getServiceLinkedRole = null;
exports.getServiceLinkedRoleOutput = null;
utilities.lazyLoad(exports, ["getServiceLinkedRole", "getServiceLinkedRoleOutput"], () => require("./getServiceLinkedRole"));
exports.getUser = null;
exports.getUserOutput = null;
utilities.lazyLoad(exports, ["getUser", "getUserOutput"], () => require("./getUser"));
exports.getUserToGroupAddition = null;
exports.getUserToGroupAdditionOutput = null;
utilities.lazyLoad(exports, ["getUserToGroupAddition", "getUserToGroupAdditionOutput"], () => require("./getUserToGroupAddition"));
exports.getVirtualMFADevice = null;
exports.getVirtualMFADeviceOutput = null;
utilities.lazyLoad(exports, ["getVirtualMFADevice", "getVirtualMFADeviceOutput"], () => require("./getVirtualMFADevice"));
exports.Group = null;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));
exports.InstanceProfile = null;
utilities.lazyLoad(exports, ["InstanceProfile"], () => require("./instanceProfile"));
exports.ManagedPolicy = null;
utilities.lazyLoad(exports, ["ManagedPolicy"], () => require("./managedPolicy"));
exports.OIDCProvider = null;
utilities.lazyLoad(exports, ["OIDCProvider"], () => require("./oidcprovider"));
exports.Policy = null;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));
exports.Role = null;
utilities.lazyLoad(exports, ["Role"], () => require("./role"));
exports.SAMLProvider = null;
utilities.lazyLoad(exports, ["SAMLProvider"], () => require("./samlprovider"));
exports.ServerCertificate = null;
utilities.lazyLoad(exports, ["ServerCertificate"], () => require("./serverCertificate"));
exports.ServiceLinkedRole = null;
utilities.lazyLoad(exports, ["ServiceLinkedRole"], () => require("./serviceLinkedRole"));
exports.User = null;
utilities.lazyLoad(exports, ["User"], () => require("./user"));
exports.UserToGroupAddition = null;
utilities.lazyLoad(exports, ["UserToGroupAddition"], () => require("./userToGroupAddition"));
exports.VirtualMFADevice = null;
utilities.lazyLoad(exports, ["VirtualMFADevice"], () => require("./virtualMFADevice"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:iam:AccessKey":
                return new exports.AccessKey(name, undefined, { urn });
            case "aws-native:iam:Group":
                return new exports.Group(name, undefined, { urn });
            case "aws-native:iam:InstanceProfile":
                return new exports.InstanceProfile(name, undefined, { urn });
            case "aws-native:iam:ManagedPolicy":
                return new exports.ManagedPolicy(name, undefined, { urn });
            case "aws-native:iam:OIDCProvider":
                return new exports.OIDCProvider(name, undefined, { urn });
            case "aws-native:iam:Policy":
                return new exports.Policy(name, undefined, { urn });
            case "aws-native:iam:Role":
                return new exports.Role(name, undefined, { urn });
            case "aws-native:iam:SAMLProvider":
                return new exports.SAMLProvider(name, undefined, { urn });
            case "aws-native:iam:ServerCertificate":
                return new exports.ServerCertificate(name, undefined, { urn });
            case "aws-native:iam:ServiceLinkedRole":
                return new exports.ServiceLinkedRole(name, undefined, { urn });
            case "aws-native:iam:User":
                return new exports.User(name, undefined, { urn });
            case "aws-native:iam:UserToGroupAddition":
                return new exports.UserToGroupAddition(name, undefined, { urn });
            case "aws-native:iam:VirtualMFADevice":
                return new exports.VirtualMFADevice(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "iam", _module);
//# sourceMappingURL=index.js.map