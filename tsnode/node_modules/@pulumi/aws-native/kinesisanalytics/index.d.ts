export { ApplicationArgs } from "./application";
export declare type Application = import("./application").Application;
export declare const Application: typeof import("./application").Application;
export { ApplicationOutputResourceArgs } from "./applicationOutputResource";
export declare type ApplicationOutputResource = import("./applicationOutputResource").ApplicationOutputResource;
export declare const ApplicationOutputResource: typeof import("./applicationOutputResource").ApplicationOutputResource;
export { ApplicationReferenceDataSourceArgs } from "./applicationReferenceDataSource";
export declare type ApplicationReferenceDataSource = import("./applicationReferenceDataSource").ApplicationReferenceDataSource;
export declare const ApplicationReferenceDataSource: typeof import("./applicationReferenceDataSource").ApplicationReferenceDataSource;
export { GetApplicationArgs, GetApplicationResult, GetApplicationOutputArgs } from "./getApplication";
export declare const getApplication: typeof import("./getApplication").getApplication;
export declare const getApplicationOutput: typeof import("./getApplication").getApplicationOutput;
export { GetApplicationOutputResourceArgs, GetApplicationOutputResourceResult, GetApplicationOutputResourceOutputArgs } from "./getApplicationOutputResource";
export declare const getApplicationOutputResource: typeof import("./getApplicationOutputResource").getApplicationOutputResource;
export declare const getApplicationOutputResourceOutput: typeof import("./getApplicationOutputResource").getApplicationOutputResourceOutput;
export { GetApplicationReferenceDataSourceArgs, GetApplicationReferenceDataSourceResult, GetApplicationReferenceDataSourceOutputArgs } from "./getApplicationReferenceDataSource";
export declare const getApplicationReferenceDataSource: typeof import("./getApplicationReferenceDataSource").getApplicationReferenceDataSource;
export declare const getApplicationReferenceDataSourceOutput: typeof import("./getApplicationReferenceDataSource").getApplicationReferenceDataSourceOutput;
